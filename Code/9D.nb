(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    255370,       5174]
NotebookOptionsPosition[    247497,       5048]
NotebookOutlinePosition[    247838,       5063]
CellTagsIndexPosition[    247795,       5060]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Some assumptions to help with the calculus and algebra.
i = BW_i = instrumental bandwidth
c = BW_c = single channel bandwidth
t = BW_t = transmission bandwidth (assumed uniform intensity across \
bandwidth)
tmax = maximum transmission bandwidth (edge of haystack)
tcrit = value of transmission bandwidth at which the signal strength is at \
the haystack maximum (upper boundary)
s = single channel sensitivity of the instrument in units of inverse flux
dmax = upper haystack boundary for distance
P0 = EIRP_min/4Pi = haystack lower sensitivity boundary divided by 4 pi 
We require all of these to be positive reals\
\>", "Text",
 CellChangeTimes->{{3.742822146385684*^9, 3.74282234883825*^9}, {
  3.742822400353812*^9, 3.7428224720453997`*^9}, {3.7428228504117804`*^9, 
  3.742822854756525*^9}, {3.7428228889381523`*^9, 
  3.742822895937736*^9}},ExpressionUUID->"0d404c38-9fe8-41ef-a44d-\
ed67ffd6b3ad"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bwassumptions", " ", "=", " ", 
  RowBox[{
   RowBox[{"i", ">", "c"}], " ", "&&", " ", 
   RowBox[{"i", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"c", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"s", ">", "0"}], " ", "&&", " ", 
   RowBox[{"tcrit", ">", "0"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dassumptions", " ", "=", " ", 
  RowBox[{
   RowBox[{"dmax", ">", "0"}], " ", "&&", " ", 
   RowBox[{"EIRP", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"P0", " ", ">", " ", "0"}]}]}]}], "Input",
 CellChangeTimes->{
  3.733743110986164*^9, {3.733840232346436*^9, 3.733840250436726*^9}, {
   3.734184165663025*^9, 3.734184168923106*^9}, {3.735057244915441*^9, 
   3.735057275994812*^9}, {3.7428224679407663`*^9, 3.7428224691988173`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"57f06996-889a-450b-9a9d-058d485a5184"],

Cell[BoxData[
 RowBox[{
  RowBox[{"i", ">", "c"}], "&&", 
  RowBox[{"i", ">", "0"}], "&&", 
  RowBox[{"c", ">", "0"}], "&&", 
  RowBox[{"s", ">", "0"}], "&&", 
  RowBox[{"tcrit", ">", "0"}]}]], "Output",
 CellChangeTimes->{3.736167467241302*^9, 3.736599259394669*^9, 
  3.7366865563586493`*^9, 3.742822474153727*^9, 3.743082312222314*^9, 
  3.7439314742065067`*^9, 3.7491509844181023`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"85702ac8-92b8-4dec-8344-e77de0209940"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dmax", ">", "0"}], "&&", 
  RowBox[{"EIRP", ">", "0"}], "&&", 
  RowBox[{"P0", ">", "0"}]}]], "Output",
 CellChangeTimes->{3.736167467241302*^9, 3.736599259394669*^9, 
  3.7366865563586493`*^9, 3.742822474153727*^9, 3.743082312222314*^9, 
  3.7439314742065067`*^9, 3.7491509844250097`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"2d1258f5-b1f6-4076-be90-37dad39d43ae"]
}, Open  ]],

Cell["\<\
We assume all of the above and also define the units meters and Hertz to be \
positive reals\
\>", "Text",
 CellChangeTimes->{{3.742822500964053*^9, 
  3.7428225377209063`*^9}},ExpressionUUID->"b3d29880-43f9-4dfe-aea1-\
5d2448b351ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Assumptions", " ", "=", " ", 
  RowBox[{"bwassumptions", " ", "&&", " ", "dassumptions", " ", "&&", " ", 
   RowBox[{"m", ">", "0"}], " ", "&&", " ", 
   RowBox[{"Hz", " ", ">", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.734178190214109*^9, 3.7341781981723824`*^9}, {
  3.736600481176993*^9, 3.736600511636113*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"0d3a43ed-2b89-416e-b519-cf422c199cb1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"i", ">", "c"}], "&&", 
  RowBox[{"i", ">", "0"}], "&&", 
  RowBox[{"c", ">", "0"}], "&&", 
  RowBox[{"s", ">", "0"}], "&&", 
  RowBox[{"tcrit", ">", "0"}], "&&", 
  RowBox[{"dmax", ">", "0"}], "&&", 
  RowBox[{"EIRP", ">", "0"}], "&&", 
  RowBox[{"P0", ">", "0"}], "&&", 
  RowBox[{"m", ">", "0"}], "&&", 
  RowBox[{"Hz", ">", "0"}]}]], "Output",
 CellChangeTimes->{
  3.734178220083869*^9, 3.735057279919839*^9, 3.7359001828902273`*^9, 
   3.736167471233144*^9, 3.736599264435482*^9, {3.736600483547791*^9, 
   3.736600512197439*^9}, 3.736686564284737*^9, 3.7428225396628857`*^9, 
   3.743082319519313*^9, 3.743931478123745*^9, 3.7491509844641943`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"d8096a69-09e3-4cd2-af74-195cb45cb482"]
}, Open  ]],

Cell["We choose some nominal values for concreteness and plotting", "Text",
 CellChangeTimes->{{3.7428225761943407`*^9, 
  3.742822585633651*^9}},ExpressionUUID->"f0ac5fa2-954c-4fa8-a129-\
496c617a5d69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nominal", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"i", "\[Rule]", "2"}], ",", " ", 
    RowBox[{"s", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"P0", "\[Rule]", " ", 
     RowBox[{"2", "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", "Pi"}], ")"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.734169102716085*^9, 3.73416911231243*^9}, 
   3.7341695440914087`*^9, {3.73505728693993*^9, 3.735057293037346*^9}, {
   3.735057377262698*^9, 3.735057378594264*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"31f3d801-aa5c-41f1-9cc4-902636eb0d46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"c", "\[Rule]", "1"}], ",", 
   RowBox[{"i", "\[Rule]", "2"}], ",", 
   RowBox[{"s", "\[Rule]", "1"}], ",", 
   RowBox[{"P0", "\[Rule]", 
    FractionBox["1", 
     RowBox[{"2", " ", "\[Pi]"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.734169113649992*^9, 3.734169947743411*^9, 
  3.734170714625938*^9, 3.7341782234388943`*^9, 3.735057295094968*^9, 
  3.735057378897758*^9, 3.735900184726774*^9, 3.736599266685369*^9, 
  3.736686566945722*^9, 3.7428225881808662`*^9, 3.743082322130444*^9, 
  3.7439314803835163`*^9, 3.749150984482546*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"7fba33b4-3a92-4721-8a30-395f904d257b"]
}, Open  ]],

Cell["\<\
We define y to be the sensitivity to a signal,  expressed as one over the \
noise, for an instrument with uniform single-channel sensitivity s across a \
bandwidth i as a function of frequency w and the transmission bandwidth t. 
x represents the region of frequency space across which sensitivity drops \
because some of the signal falls out-of-band.
We use different dummy variables than the paper, but this function defines \
the trapezoid in figure 3. \
\>", "Text",
 CellChangeTimes->{{3.733735506223822*^9, 3.7337357374603367`*^9}, {
  3.733845046446645*^9, 3.733845063590308*^9}, {3.742822593916995*^9, 
  3.742822606317487*^9}, {3.742822913498*^9, 
  3.742822967310637*^9}},ExpressionUUID->"f589b473-84e0-4fde-914d-\
a2ea3ea9d581"],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "w_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s", "*", 
        RowBox[{"w", "/", "x"}]}], ",", 
       RowBox[{"0", "<", "w", "\[LessEqual]", " ", "x"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", " ", 
       RowBox[{"x", " ", "\[LessEqual]", " ", "w", " ", "<", " ", 
        RowBox[{"t", "+", "i", "-", "x"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s", "-", " ", 
        RowBox[{"s", " ", "*", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"w", "-", 
            RowBox[{"(", 
             RowBox[{"t", "+", "i", "-", "x"}], ")"}]}], ")"}], "/", 
          "x"}]}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"t", "+", "i", "-", "x"}], ")"}], "\[LessEqual]", "w", "<", 
        RowBox[{"t", "+", "i"}]}]}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.733672617666507*^9, {3.733744146078266*^9, 3.733744149973439*^9}, {
   3.733744193553731*^9, 3.733744200259819*^9}, 3.733845048235441*^9, 
   3.734169831023972*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"6f63959c-f087-4971-ba0d-a13298288410"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "[", "w", "]"}]], "Input",
 CellChangeTimes->{{3.733671903125947*^9, 3.733671907407617*^9}, 
   3.733671938490671*^9, {3.733672305835511*^9, 3.733672310475482*^9}, {
   3.7337442066463127`*^9, 3.733744215172683*^9}, 3.73384505023973*^9, 
   3.734169836026698*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"ecccd36d-902b-4d4b-bb9d-c19d399df3f7"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"s", " ", "w"}], "x"], 
        RowBox[{"0", "<", "w", "\[LessEqual]", "x"}]},
       {"s", 
        RowBox[{"x", "\[LessEqual]", "w", "<", 
         RowBox[{"i", "+", "t", "-", "x"}]}]},
       {
        RowBox[{"s", "-", 
         FractionBox[
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "i"}], "-", "t", "+", "w", "+", "x"}], ")"}]}], 
          "x"]}], 
        RowBox[{
         RowBox[{"i", "+", "t", "-", "x"}], "\[LessEqual]", "w", "<", 
         RowBox[{"i", "+", "t"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7336719079139557`*^9, 3.733671938842231*^9, {3.7336723060972443`*^9, 
   3.733672325173452*^9}, 3.733672406730509*^9, 3.733736050184635*^9, 
   3.73374351722471*^9, {3.733744207999693*^9, 3.733744215500535*^9}, 
   3.733830721884149*^9, 3.733845069049918*^9, 3.733846390379938*^9, 
   3.73407854797147*^9, 3.734169836510666*^9, 3.734169882517503*^9, 
   3.734170719307971*^9, 3.734178226797027*^9, 3.736686573873693*^9, 
   3.7428231020803757`*^9, 3.743082327929994*^9, 3.743931482875554*^9, 
   3.7491509845176306`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"203faf98-5aa8-42e4-92ea-91115d5d640f"]
}, Open  ]],

Cell["\<\
Next we integrate the sensitivity over transmission band-center frequency.  \
This gives us the area under y, our metric of interest for the 8D haystack, \
in terms of the transmission bandwidth, maximum sensitivity s, and x.  This \
is just the area under our trapezoid.  \
\>", "Text",
 CellChangeTimes->{{3.733735811341679*^9, 3.7337359387558813`*^9}, {
  3.733845076387735*^9, 3.7338450880203657`*^9}, {3.73384526162149*^9, 
  3.7338452693237667`*^9}, {3.742823014077153*^9, 
  3.742823035355495*^9}},ExpressionUUID->"c85729cd-a156-4aef-9f99-\
f3b638d222ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ynugeneral", "[", 
   RowBox[{"s_", ",", "t_", ",", "x_"}], "]"}], " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", ">", "0"}], " ", "&&", " ", 
       RowBox[{"w", ">", "0"}], " ", "&&", " ", 
       RowBox[{"t", ">", "0"}], " ", "&&", " ", 
       RowBox[{"x", " ", "<", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "+", "t"}], ")"}], "/", "2"}]}]}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"y", "[", "w", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"w", ",", "0", ",", 
          RowBox[{"t", "+", "i"}]}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"a", "&&", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"i", "+", "t"}], ")"}], ">", 
      RowBox[{"2", "x"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7336714392281857`*^9, 3.733671441058529*^9}, {
   3.733671646609577*^9, 3.733671647411771*^9}, {3.733671957696473*^9, 
   3.733671963591865*^9}, {3.733672201447544*^9, 3.733672206455188*^9}, {
   3.733673347793537*^9, 3.73367335009192*^9}, {3.733673452477401*^9, 
   3.733673461959001*^9}, {3.733673674562517*^9, 3.733673677733301*^9}, {
   3.7336747772296886`*^9, 3.7336747776218433`*^9}, {3.7336748300527077`*^9, 
   3.733674834538353*^9}, {3.733674864729967*^9, 3.733674887863018*^9}, 
   3.733735480924301*^9, {3.733735950239237*^9, 3.7337359789630213`*^9}, 
   3.733736091047941*^9, {3.733744223092808*^9, 3.733744223939164*^9}, {
   3.733831812324988*^9, 3.733831850801772*^9}, {3.7338319139865723`*^9, 
   3.73383194088118*^9}, {3.733837888545828*^9, 3.733837888658719*^9}, {
   3.733845110320127*^9, 3.733845110392687*^9}, {3.733846371343689*^9, 
   3.733846400975415*^9}, 3.734084736260954*^9, {3.734169844380946*^9, 
   3.7341698447041893`*^9}, {3.742823255382045*^9, 3.742823281764063*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"4a9b6095-b30d-4419-aab4-95ae6a758c49"],

Cell[BoxData[
 RowBox[{"s", " ", 
  RowBox[{"(", 
   RowBox[{"i", "+", "t", "-", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.734084739481311*^9, 3.734169008111106*^9, 
  3.734169847449573*^9, 3.734169886145269*^9, 3.734170723626062*^9, 
  3.7341782301092653`*^9, 3.735057303114197*^9, 3.735900191128624*^9, 
  3.736167476868834*^9, 3.736599272457362*^9, 3.736686579028235*^9, 
  3.742823106724786*^9, 3.742823259573415*^9, 3.742823290335979*^9, 
  3.743082332580413*^9, 3.743931485577055*^9, 3.7491509863004003`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"c3f5ece1-b83a-41ea-b8cf-cbb8a752123d"]
}, Open  ]],

Cell["\<\
Next, we need to define this function in our regions of interest. We have \
three regimes of transmission bandwidth: 

For spectrally unresolved signals (BW_t<BW_c), we have the single-channel \
sensitivity and the out-of-band region is as wide as the the transmission \
bandwidth (since that\[CloseCurlyQuote]s how for away from the edge of the \
instrumental bandwidth a signal center can be (on either side) a signal can \
go before we lose it entirely.
  
For spectrally resolved signals (BW_c \[LessEqual] BW_t < BW_i) we increase \
the noise (decrease the sensitivity) by the sqrt of the number of channels \
(BW_t/BW_c), and the out-of-band region (x) is still the transmission \
bandwidth.

For very broadband signals (BW_t > BW_i),  the noise is fixed at \
sqrt(BW_i/BW_c) times the single-channel noise, and the out-of bandwidth \
range is now BW_i.\
\>", "Text",
 CellChangeTimes->{
  3.733743013070714*^9, {3.733743534086131*^9, 3.733743539209855*^9}, {
   3.733845124468474*^9, 3.733845380557407*^9}, {3.74282307570245*^9, 
   3.742823095453608*^9}},ExpressionUUID->"9f08c150-1dc7-4f1c-aee2-\
a0e0dc7b1dd5"],

Cell["\<\
So, we define h to be the maximum sensitivity (height of the trapezoid) h \
appropriately in these three regions. This \
\>", "Text",
 CellChangeTimes->{{3.742823132461314*^9, 3.742823139950124*^9}, {
  3.742823173666263*^9, 3.742823223535077*^9}, {3.742823332953411*^9, 
  3.742823336396009*^9}, {3.742823440609436*^9, 
  3.7428234430161667`*^9}},ExpressionUUID->"8b9e9cac-79c1-4de1-8fb7-\
dceb0c3b426d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "t_", "]"}], " ", "=", " ", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", " ", 
       RowBox[{"t", "<", " ", "c"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s", " ", "*", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"c", "/", "t"}], "]"}]}], ",", " ", 
       RowBox[{"c", "\[LessEqual]", " ", "t", "<", " ", "i"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s", " ", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"i", " ", "c"}], "]"}], "/", "t"}]}], ",", " ", 
       RowBox[{"i", "\[LessEqual]", " ", "t"}]}], "}"}]}], "}"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.7341701309834347`*^9, 3.734170203949703*^9}, {
   3.734171591703484*^9, 3.734171613307506*^9}, 3.7366865960876513`*^9, 
   3.742823203929204*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"17be91b9-a183-4bfe-bf26-8f9b4d1d574b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"s", 
        RowBox[{"t", "<", "c"}]},
       {
        RowBox[{"s", " ", 
         SqrtBox[
          FractionBox["c", "t"]]}], 
        RowBox[{"c", "\[LessEqual]", "t", "<", "i"}]},
       {
        FractionBox[
         RowBox[{
          SqrtBox[
           RowBox[{"c", " ", "i"}]], " ", "s"}], "t"], 
        RowBox[{"i", "\[LessEqual]", "t"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.734171613937663*^9, 3.7341782341302433`*^9, 
  3.7350573060485773`*^9, 3.7359001936740847`*^9, 3.736167479457919*^9, 
  3.73659927344729*^9, 3.736686599389349*^9, 3.742823303845406*^9, 
  3.743082334068207*^9, 3.7439314881786203`*^9, 3.7491509863916636`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"32a44ef6-e1cc-4812-97b7-c3d104fe55e3"]
}, Open  ]],

Cell["\<\
This lets us define the area under the trapezoid in all 3 regions as a \
function of transmission bandwidth.  These values correspond to the areas \
A11, A21, and A31 in the appendix.\
\>", "Text",
 CellChangeTimes->{{3.742823358671894*^9, 
  3.7428234305199842`*^9}},ExpressionUUID->"770a395d-9e05-4a02-8a42-\
745ac7175eb7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ynu", "[", "t_", "]"}], " ", "=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Refine", "[", 
        RowBox[{
         RowBox[{"ynugeneral", "[", 
          RowBox[{
           RowBox[{"h", "[", "t", "]"}], ",", "t", ",", "t"}], "]"}], ",", 
         RowBox[{"t", "<", "c"}]}], "]"}], ",", 
       RowBox[{"t", "<", "c"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Refine", "[", 
        RowBox[{
         RowBox[{"ynugeneral", "[", 
          RowBox[{
           RowBox[{"h", "[", "t", "]"}], ",", "t", ",", "t"}], "]"}], ",", 
         RowBox[{"c", "\[LessEqual]", "t", "<", "i"}]}], "]"}], ",", 
       RowBox[{"c", "\[LessEqual]", "t", "<", "i"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Refine", "[", 
        RowBox[{
         RowBox[{"ynugeneral", "[", 
          RowBox[{
           RowBox[{"h", "[", "t", "]"}], ",", "t", ",", "i"}], "]"}], ",", 
         RowBox[{
          RowBox[{"i", "\[LessEqual]", "t"}], "&&", " ", 
          RowBox[{"i", ">", "c"}]}]}], "]"}], ",", 
       RowBox[{"i", "\[LessEqual]", "t"}]}], "}"}]}], "\[IndentingNewLine]", 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73374303758823*^9, 3.7337430744301443`*^9}, {
   3.733743125895564*^9, 3.73374315009198*^9}, {3.733743547610487*^9, 
   3.733743557890925*^9}, {3.733743597896303*^9, 3.7337437479733887`*^9}, {
   3.733743794564184*^9, 3.733743799565721*^9}, {3.733744411834817*^9, 
   3.733744419767131*^9}, {3.733752230283593*^9, 3.733752269988641*^9}, {
   3.733838023468668*^9, 3.7338380236418037`*^9}, {3.7338390301841383`*^9, 
   3.733839091414782*^9}, {3.733839321705822*^9, 3.733839327328185*^9}, {
   3.733839554872827*^9, 3.7338395565584097`*^9}, {3.733845387648971*^9, 
   3.733845395926798*^9}, {3.7338464138373547`*^9, 3.733846430229373*^9}, 
   3.7340785801780243`*^9, 3.734084755367653*^9, {3.73417016562062*^9, 
   3.734170170028006*^9}, {3.734170210605809*^9, 3.734170391962961*^9}, {
   3.734170613056665*^9, 3.7341706132212563`*^9}, {3.734170690426044*^9, 
   3.7341706949884043`*^9}, {3.7366866043322487`*^9, 3.736686609427722*^9}, {
   3.7428232045722523`*^9, 3.742823205265748*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"b868adf5-1d9b-4721-9ac2-4f5bedcc0de4"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"i", " ", "s"}], 
        RowBox[{"t", "<", "c"}]},
       {
        RowBox[{"i", " ", "s", " ", 
         SqrtBox[
          FractionBox["c", "t"]]}], 
        RowBox[{"c", "\[LessEqual]", "t", "<", "i"}]},
       {
        RowBox[{
         SqrtBox[
          RowBox[{"c", " ", "i"}]], " ", "s"}], 
        RowBox[{"i", "\[LessEqual]", "t"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7341702830858088`*^9, {3.734170369152422*^9, 3.734170392218444*^9}, 
   3.7341706144325027`*^9, 3.734170698442511*^9, 3.734170743783449*^9, 
   3.7341782383139668`*^9, 3.735057307817634*^9, 3.7359001955751133`*^9, 
   3.7359193870593243`*^9, 3.736167480389659*^9, 3.736599275537725*^9, 
   3.736686614832436*^9, 3.742823315660329*^9, 3.7430823369196444`*^9, 
   3.743931489294001*^9, 3.749150986443291*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"2f2a5933-d1bb-46b3-a4b7-6da9b393d023"]
}, Open  ]],

Cell["\<\
The maximum value for y in our haystack corresponds to a transmitter with a \
minimum power (EIRP), at some distance d.  We don\[CloseCurlyQuote]t need any \
more sensitivity than that to search the haystack.\
\>", "Text",
 CellChangeTimes->{
  3.733743579298655*^9, {3.7338454192082787`*^9, 
   3.73384542512713*^9}},ExpressionUUID->"5d3009e8-eae6-4617-947c-\
c2d038f7b24f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ymax", "[", 
   RowBox[{"d_", ",", "t_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"d", "^", "2"}], "/", "P0"}]}]], "Input",
 CellChangeTimes->{
  3.7337428703837633`*^9, {3.733829701674053*^9, 3.733829702986396*^9}, {
   3.7338379196145983`*^9, 3.73383791974726*^9}, {3.735057314270646*^9, 
   3.735057321198113*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"8cb37c4b-9939-4378-ba82-f67870130e9a"],

Cell["\<\
Now, we need to integrate this across our bandwidth in cases where it \
applies.  This will be anywhere that our sensitivity is actually better than \
ymax.  In these regions, we can use our general function, but we have to \
reduce our out-of-band region by a factor of (ymax/s).  This corresponds to \
our areas A12, A22, and A32.\
\>", "Text",
 CellChangeTimes->{{3.733846492707028*^9, 3.7338465865985813`*^9}, {
  3.733846724916678*^9, 3.7338467408914347`*^9}, {3.73409509897027*^9, 
  3.734095103739785*^9}, {3.734175436990755*^9, 3.734175443459206*^9}, {
  3.742823587437806*^9, 
  3.742823603436986*^9}},ExpressionUUID->"9a5c1101-1e8c-46c5-87db-\
9288a4a1ab13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ymaxnu", "[", 
   RowBox[{"d_", ",", "t_"}], "]"}], " ", "=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ynugeneral", "[", 
        RowBox[{
         RowBox[{"ymax", "[", 
          RowBox[{"d", ",", "t"}], "]"}], ",", "t", ",", 
         RowBox[{"t", " ", 
          RowBox[{
           RowBox[{"ymax", "[", 
            RowBox[{"d", ",", "t"}], "]"}], "/", 
           RowBox[{"Refine", "[", 
            RowBox[{
             RowBox[{"h", "[", "t", "]"}], ",", 
             RowBox[{"t", "<", "c"}]}], "]"}]}]}]}], "]"}], ",", 
       RowBox[{"t", "<", "c"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ynugeneral", "[", 
        RowBox[{
         RowBox[{"ymax", "[", 
          RowBox[{"d", ",", "t"}], "]"}], ",", "t", ",", 
         RowBox[{"t", " ", 
          RowBox[{
           RowBox[{"ymax", "[", 
            RowBox[{"d", ",", "t"}], "]"}], "/", 
           RowBox[{"Refine", "[", 
            RowBox[{
             RowBox[{"h", "[", "t", "]"}], ",", 
             RowBox[{"c", "\[LessEqual]", "t", "<", "i"}]}], "]"}]}]}]}], 
        "]"}], ",", 
       RowBox[{"c", "\[LessEqual]", "t", "<", "i"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ynugeneral", "[", 
        RowBox[{
         RowBox[{"ymax", "[", 
          RowBox[{"d", ",", "t"}], "]"}], ",", "t", ",", 
         RowBox[{"i", " ", 
          RowBox[{
           RowBox[{"ymax", "[", 
            RowBox[{"d", ",", "t"}], "]"}], "/", 
           RowBox[{"Refine", "[", 
            RowBox[{
             RowBox[{"h", "[", "t", "]"}], ",", 
             RowBox[{
              RowBox[{"i", "\[LessEqual]", "t"}], " ", "&&", " ", 
              RowBox[{"i", ">", "c"}]}]}], "]"}]}]}]}], "]"}], ",", 
       RowBox[{"i", "\[LessEqual]", "t"}]}], "}"}]}], "\[IndentingNewLine]", 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7338467651966*^9, 3.733846826520771*^9}, {
  3.7338474536084146`*^9, 3.733847558490808*^9}, {3.734078615744039*^9, 
  3.734078619031637*^9}, {3.734084774826273*^9, 3.734084878732306*^9}, {
  3.734084918469364*^9, 3.734084926415948*^9}, {3.734093468521572*^9, 
  3.734093485882725*^9}, {3.734093535304769*^9, 3.734093552760373*^9}, {
  3.734093592636677*^9, 3.734093596633905*^9}, {3.734093730306447*^9, 
  3.734093740776226*^9}, {3.734093799267317*^9, 3.7340939644294863`*^9}, {
  3.734094875317547*^9, 3.734094917589446*^9}, {3.7340949495574636`*^9, 
  3.734095014061799*^9}, {3.734170532586171*^9, 3.7341705366609*^9}, {
  3.734172926747136*^9, 3.7341729488736563`*^9}, {3.736686624287368*^9, 
  3.7366866311497726`*^9}, {3.742823205878704*^9, 3.742823206579146*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"5a764ce4-71da-4dc3-add5-01f0be053f7d"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{
          SuperscriptBox["d", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"i", "+", "t", "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["d", "2"], " ", "t"}], 
             RowBox[{"P0", " ", "s"}]]}], ")"}]}], "P0"], 
        RowBox[{"t", "<", "c"}]},
       {
        FractionBox[
         RowBox[{
          SuperscriptBox["d", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"i", "+", "t", "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["d", "2"], " ", "t"}], 
             RowBox[{"P0", " ", "s", " ", 
              SqrtBox[
               FractionBox["c", "t"]]}]]}], ")"}]}], "P0"], 
        RowBox[{"c", "\[LessEqual]", "t", "<", "i"}]},
       {
        FractionBox[
         RowBox[{
          SuperscriptBox["d", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"i", "+", "t", "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["d", "2"], " ", "i", " ", "t"}], 
             RowBox[{
              SqrtBox[
               RowBox[{"c", " ", "i"}]], " ", "P0", " ", "s"}]]}], ")"}]}], 
         "P0"], 
        RowBox[{"i", "\[LessEqual]", "t"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.734169028860382*^9, 3.7341699254385967`*^9, 
  3.734170414344245*^9, 3.734170538779347*^9, 3.7341708058998404`*^9, 
  3.734172950262887*^9, 3.7341782453292007`*^9, 3.735057324318584*^9, 
  3.7359002073639927`*^9, 3.736167483824707*^9, 3.7365992793145323`*^9, 
  3.736686654899519*^9, 3.742823575279789*^9, 3.743082342127654*^9, 
  3.743931491509963*^9, 3.749150986499789*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"26928e5a-0cd2-49b2-ab75-fc9983a064e6"]
}, Open  ]],

Cell["\<\
There is some critical distance within which we have too much sensitivity; we \
are able to detect all transmitters with power EIRP_min or higher:\
\>", "Text",
 CellChangeTimes->{{3.733845772864942*^9, 
  3.7338458102286663`*^9}},ExpressionUUID->"db77d6a4-d0f2-48d0-9582-\
c0f0ce67760b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dcrit", "[", "t_", "]"}], " ", "=", " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"P0", "  ", 
    RowBox[{"h", "[", "t", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.733845819922687*^9, 3.733845865006919*^9}, {
   3.7340953189549217`*^9, 3.734095319046852*^9}, {3.7341697940202503`*^9, 
   3.734169794235855*^9}, 3.734170023784727*^9, {3.7341704587865677`*^9, 
   3.734170459433083*^9}, {3.735057344033051*^9, 3.7350573486554527`*^9}, {
   3.7366866389889603`*^9, 3.736686640808363*^9}, 3.742823207485074*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"ec6659e2-cd3b-4616-85dc-2b58b3066dbf"],

Cell[BoxData[
 SqrtBox[
  RowBox[{"P0", " ", 
   RowBox[{"(", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {"s", 
           RowBox[{"t", "<", "c"}]},
          {
           RowBox[{"s", " ", 
            SqrtBox[
             FractionBox["c", "t"]]}], 
           RowBox[{"c", "\[LessEqual]", "t", "<", "i"}]},
          {
           FractionBox[
            RowBox[{
             SqrtBox[
              RowBox[{"c", " ", "i"}]], " ", "s"}], "t"], 
           RowBox[{"i", "\[LessEqual]", "t"}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ")"}]}]]], "Output",
 CellChangeTimes->{3.733845908834711*^9, 3.734095322733164*^9, 
  3.7341690884272003`*^9, 3.7341697966108007`*^9, 3.734169959739935*^9, 
  3.734170029528913*^9, 3.734170459969329*^9, 3.734170544713642*^9, 
  3.734170818440176*^9, 3.73417301694703*^9, 3.7341782767159023`*^9, 
  3.735057349228416*^9, 3.735900236749374*^9, 3.7361674871434298`*^9, 
  3.736599281611136*^9, 3.736686657771645*^9, 3.742823652723063*^9, 
  3.743082345333913*^9, 3.74393149650255*^9, 3.7491509865337253`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"c7584de9-0af2-4b5c-9204-ae7158c8db8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ynutotal", "[", 
   RowBox[{"d", ",", "t"}], "]"}], " ", "=", " ", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ymaxnu", "[", 
        RowBox[{"d", ",", "t"}], "]"}], ",", 
       RowBox[{"d", "\[LessEqual]", 
        RowBox[{"dcrit", "[", "t", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ynu", "[", "t", "]"}], ",", 
       RowBox[{"d", ">", 
        RowBox[{"dcrit", "[", "t", "]"}]}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.734171043048826*^9, 3.7341711189182367`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"297bea79-c0b5-43af-8249-4891137921e2"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               FractionBox[
                RowBox[{
                 SuperscriptBox["d", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"i", "+", "t", "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", "t"}], 
                    RowBox[{"P0", " ", "s"}]]}], ")"}]}], "P0"], 
               RowBox[{"t", "<", "c"}]},
              {
               FractionBox[
                RowBox[{
                 SuperscriptBox["d", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"i", "+", "t", "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", "t"}], 
                    RowBox[{"P0", " ", "s", " ", 
                    SqrtBox[
                    FractionBox["c", "t"]]}]]}], ")"}]}], "P0"], 
               RowBox[{"c", "\[LessEqual]", "t", "<", "i"}]},
              {
               FractionBox[
                RowBox[{
                 SuperscriptBox["d", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"i", "+", "t", "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", "i", " ", "t"}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"c", " ", "i"}]], " ", "P0", " ", "s"}]]}], 
                  ")"}]}], "P0"], 
               RowBox[{"i", "\[LessEqual]", "t"}]},
              {"0", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}},
             Selectable->True]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], 
        RowBox[{"d", "\[LessEqual]", 
         SqrtBox[
          RowBox[{"P0", " ", 
           RowBox[{"(", 
            TagBox[GridBox[{
               {"\[Piecewise]", GridBox[{
                  {"s", 
                   RowBox[{"t", "<", "c"}]},
                  {
                   RowBox[{"s", " ", 
                    SqrtBox[
                    FractionBox["c", "t"]]}], 
                   RowBox[{"c", "\[LessEqual]", "t", "<", "i"}]},
                  {
                   FractionBox[
                    RowBox[{
                    SqrtBox[
                    RowBox[{"c", " ", "i"}]], " ", "s"}], "t"], 
                   RowBox[{"i", "\[LessEqual]", "t"}]},
                  {"0", 
                   TagBox["True",
                    "PiecewiseDefault",
                    AutoDelete->True]}
                 },
                 AllowedDimensions->{2, Automatic},
                 Editable->True,
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                 Selectable->True]}
              },
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{1.}}, "RowsIndexed" -> {}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.35]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}}],
             "Piecewise",
             DeleteWithContents->True,
             Editable->False,
             SelectWithContents->True,
             Selectable->False], ")"}]}]]}]},
       {
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               RowBox[{"i", " ", "s"}], 
               RowBox[{"t", "<", "c"}]},
              {
               RowBox[{"i", " ", "s", " ", 
                SqrtBox[
                 FractionBox["c", "t"]]}], 
               RowBox[{"c", "\[LessEqual]", "t", "<", "i"}]},
              {
               RowBox[{
                SqrtBox[
                 RowBox[{"c", " ", "i"}]], " ", "s"}], 
               RowBox[{"i", "\[LessEqual]", "t"}]},
              {"0", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}},
             Selectable->True]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], 
        RowBox[{"d", ">", 
         SqrtBox[
          RowBox[{"P0", " ", 
           RowBox[{"(", 
            TagBox[GridBox[{
               {"\[Piecewise]", GridBox[{
                  {"s", 
                   RowBox[{"t", "<", "c"}]},
                  {
                   RowBox[{"s", " ", 
                    SqrtBox[
                    FractionBox["c", "t"]]}], 
                   RowBox[{"c", "\[LessEqual]", "t", "<", "i"}]},
                  {
                   FractionBox[
                    RowBox[{
                    SqrtBox[
                    RowBox[{"c", " ", "i"}]], " ", "s"}], "t"], 
                   RowBox[{"i", "\[LessEqual]", "t"}]},
                  {"0", 
                   TagBox["True",
                    "PiecewiseDefault",
                    AutoDelete->True]}
                 },
                 AllowedDimensions->{2, Automatic},
                 Editable->True,
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                 Selectable->True]}
              },
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{1.}}, "RowsIndexed" -> {}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.35]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}}],
             "Piecewise",
             DeleteWithContents->True,
             Editable->False,
             SelectWithContents->True,
             Selectable->False], ")"}]}]]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.734171121160021*^9, 3.734173020824212*^9, 
  3.734178279886401*^9, 3.735057351346895*^9, 3.735900240155141*^9, 
  3.7365992839059477`*^9, 3.736686659733886*^9, 3.7428236844756327`*^9, 
  3.743082347178883*^9, 3.743931498049715*^9, 3.74915098656497*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"f8cd7495-9f3e-48a0-811f-1ea2f11d17a6"]
}, Open  ]],

Cell["\<\
We can visualize the 6 regions (A11, A12, A21, A22, A31, A32) using our \
nominal values. \
\>", "Text",
 CellChangeTimes->{{3.742823695946994*^9, 
  3.7428237258956013`*^9}},ExpressionUUID->"7cec2326-38ab-4921-9b23-\
cae1a57bd4af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ynutotal", "[", 
     RowBox[{"d", ",", "t"}], "]"}], " ", "/.", "nominal"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.73383797525244*^9, 3.733838000490704*^9}, {
  3.733846458039507*^9, 3.73384645812106*^9}, {3.734093995969376*^9, 
  3.7340939960982924`*^9}, {3.7340950448978148`*^9, 3.734095050523892*^9}, {
  3.73417113055792*^9, 3.734171141898601*^9}, {3.735057358043193*^9, 
  3.735057358667242*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"0f9fc723-8220-4189-b713-d8b139fb89c7"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
lq7rp+A3XzzO6N05XfUBN+Vr06CAW7q+R1h/QTsEx3oBc8xvM8d8LHPMHzLH
fBdzzM+A+7x4ts01MGfLnWN8xrrb+6oOZVbuq+pun8eKP9m/6Zxr4DfD6enA
xYHez4xq69OzheVMNDpm2zoq0DtDS3DYD1jeKv3sf/stTCk77R3+0efetUGu
Sf/pwvxmlvYH/vs9zM31iFEee2xFnZ/Cvml90n5c/dXb9YlR4/qx08OyJRhT
h2Q87hqY0ao+nUNyjbd3yGv1u1B/+KnVeYnDnhYJRrG/6ldwcLez8vO5nul9
enouKz/zx72/8p++XP9KGwO9xv0b75jn3H5oxX/Pmzn8mH/fayturleQFTf/
jrdW3KzHOyt+4MKohPT091b8aWHf5u72wVY88/gmC+wdPlrxend33vF2DbHi
Q+2z5XdwD7Xia+aM6x3o/cmKm9tjmBU36x1uxc3tNNKKm5+zdd4FndH+/3m8
sW7Vf/tp8193o1bD6XfWp49Xbm6/RwzHHoWT7pXaa8xsNcnb2zVfS9hnHxLh
kd5hqXJz+Q8MtxLDpvSOjNf2eW5pjYJ2di/0fYF/W+1/SsydGg7uL5WjHcIP
2hv8mMu3xFvUB5znLTnumdtBJqt2jvEg+kGMB/E+on3ifcT8KvwXePJszqsJ
ifJ7UjVuJJ3Z7tjEP1HLxXuHcs3tL4tVfTCvi3iLeV2zXbzqPLhKz/dJ01Lk
35OU1+q6bfilssnKoT844j/moybc+fFH45K7xjE891+95uUuVX2ijlvB106N
rew7ytJ+4Kfy/SljPL5Z5jmRB973rNHuw6eGJsQH+NlVe/nPe3tP0n4HfuaO
z+hyIv+fBuIn7AOOrnevNn+y5s/w/8Oo54lBs5uYEGdgX6Dajmcn/pqi/Rf8
rygafKiCy0YD7RD2nQ4eLPZTwFTtR+C/X4X5h18VaGbCewf7BfYnnHwyT9f2
A//PN09/2Mp7s7Yf2N8Ydb3Yj3VmaJ4G/+6vagz8Z7/JZG4fsWqftiT/LAen
mdoe4L9hhuQ8vbNu0/YA+25Z239wWfyb5nvw/+5e+JLwUi1NaA+wD3KdWW7i
iVnanuH/SdtVsSt67ZB2k6z2fqZKwRNeztY8Gf6Tq7R6+2lEKxPaP+w3mtJu
u2Sbq/kJ/De+0CsptdsujRuwv7YyxKNi8d8134b/wos3NA093tqE+KD2wYc/
e3r+rnkO/P/l2iz3mZm7tb+DfZEZXTy7t52neTv8138fvu5jchsT+lPYj84d
7ZoQME/jCfyXLVuu7IS9e/S9hv2Vne41t7jN1/wf/ru1bBX5oW07E9532P9Q
v2GkKcsCXU+B//V+WRtUv79X+qGsav/rzedH325ZoOMj+B+/fUP796vam8z9
Uza1v9Bv5thFdRZqnoD4c2749r12syzxh+MS1nGQZ5Z76fX1et946c9yWOUD
iMO2OOeraOeIV0dvte6a7Xyqvi/gXZo6xrmttcRhxEPEYfhBfOt2e3ifMjnT
lMMeHPGK+x2817b6F+hcIHdE6MArjib44XEZ/LB/1B8c9YcfHkfgvUB90J+i
/XN/h3EEc/hH/RPaPR8eerye7ntHv1/qSpYXmaftUT9oPycOX1rm675U2z+e
Y/i9070K+cRq+8dzr7Vpe1DDhDjlGHev/COgTKPclnVD+Mne81TlsSvitJ3D
T/Yqn+LcTserPffjsOd2C87jfXN+ll39vzvTIMfhyZZ2zv5hz/7Bbe13ZT8Y
d7AfcFv7YJFffVw6I09iWUs+AP9/1w2pW614ksZ/5A8hW02NMuz4qhzzD806
hdeLvZ+s8Rz2K+Y12lpxaZLGf7wvWC+GPd7H+FNbo39OtHD4B0e7BUe7Rb7B
89vIN/h9Aef3C+2W80nkD+wf+QP7B2f/yAeY4/2Ff7y/yBPgH/k27OEH9ugH
Ob9Ffwp7nnfifaSIAyiXx63g0B/lsj3Kxfidy+V9lSgX4zIuF5zLZXuUi/kB
Lpf3GaJcjO+4XHAul+1RLuYfuFzed4dyMU7kcsG5XLZHuZjf4HJ5HxrKxXiT
ywXnctke5WL+hMvlfVkoF+NWLhecy2V7lIv5GS6X9ymhXIx/uVxwLpftER+4
H0d9MC/E9eH9PKgPxtdcH3CuD9sjf+B1BOT/mEfFPC3GEeA8DsW8B+IJ/GB+
lf2Asx/Mh7AfzLuyH3D2g3kS9oP5WPYDzn4wf8J+ME/LfsDZD+ZV2A/mb9kP
OPvBfAv8YN0B+XnLQW+6tV62X/MH8GyLIjoEx+3TPAF5VP7IUjWq3lyo6xSw
985/Y3jqiQM6rwv++dMZt37tD+o8HvycfuAQ5uS1RMc7yKP82pxZcDH2i+b5
yHNaP57mv2lDnHLkG+3vPP/tzrl4zf9hX9L5ephfLwuH/ZNOgVf3DLKss2Bf
ShH/12PWNotUjvWdhiNGdUhJ+6Lzq8hn1jvnKPy0TLzmOTxewHNBnlOniWvR
J78maT6PvGXNo/oJA9K/Kke+UWV83YX2/2c+BPalb7QoO6PsV+Wwz+M8IWt1
u2R9r5FXcL4NzvPtzBF/bOX/6AfRrsDRTzFHP8IccZ454jBzxEl+L7DuwO8F
OL8XiG/wg/EOj19gjzjM+RI48iWMW9EeEqLypucunKCc82dwzp8xPmV7cLbH
fAXysRpNOz7v+cUyj4d2Ao75K36+4Jw3Yj6K7cFtjR+Zn7jtmHXcf8+j7YYc
dnYWP0svr3BwcI9WPuVJ7TcLJ6Rre8a8JbdncG7PzOEH/Q77AWc/zOEH/Q77
AWc/zOEH/Q77AWc/zOEH/Q77AWc/zOEH/Q77AWc/zOEH/Q77AWc/tjjPA6Cd
rNiR9rO7/SurdoJxDcoFRx7CHHkFc+QJzNHvM0c/zhz9MjjiCeIMr4shXsEe
6/7YV7l396XLF5sEKMe+hQv18wyM+uWWruei3ynV4ERApU7xyhEH6h5tf2Vk
xmSdV0HcuF6k5+seLqkaVzFuQlxFP4X4j/ko2GO8w/boF9ge4xS2R3/B9hhf
sD36EbbHuIDt0b+wPfJ5tke/A3vkUZiPWpkcvvPtiw4mxGfkOS6/Xwm/77RI
82fMUx3a2bPxuZDzWi7ydi4X/RTKxfwG2jnmNxDnEZ8R5zFeAMd4AeWiHaJc
5DNob3XvbNrb+3GA1t/cP3gbtYp3KPq1lJ/Oz+P9wn4M1BOc64n2g3rCD95H
9gPOftCu2A/eX/YDzn7Q3tgP3nf2A85+0A7ZD+ID+wFnP2if7AfxhP2Asx+0
W/hBu0JcRbuCf8Qf9g/O/tE+Od9A/8sc7RY890y33BnsHuv+rrKXbnjWHOGl
62Xg2aqkHV4z9JSx4cjrwXZ2ocqj3BscjB3kbbjROldfWecq+OBaKTs7y/qU
4+LnN/v3MJnOSP6s58l8qvH++XrD5PQ9/0hVnr/S1bnVwlua0s3/aLkb5dwS
v1cNUtLTLfvQis3JsbhllqvGPpk3VvsFlbrHp181pm7eEZOebtmHVnRZmzKH
k68ZHWkdxE3WQUr0yh6anm45Nya069Wnu491UK5+1s/2Lhj9txEh+xxgP8wu
Yqjz444mcD3PZPOW+bfDbhiX8098nZ5uOWfm1YkiMWViHEx4LjiXo87dKys8
6vvpcwHvlafYnGVpT/S5gP/2y3i3Ubee6XMBL+I0e/Shxc8NPBfwE4cadDlZ
N8DAc9HzRqaM3fn19j8GnoueWxI8bXfW3i8NPBfwN3LOCZ4LeOFsXpU2Lnmj
zwV839jXN25vCdLnAn752bCkGxPe6nMBf9HiU7XrHd8Z0B885uC4gT4/vlf9
wXMXiFt9KeG96gxuP3PGtfMPPmj7x3jzQvXlfiNLflCdwZ2rbW/76Eqw6gye
ueox74YuIaozeKUjc8+figxVncGf2Me+y9c2THUGj1r2ZO6QkeGqM3i9IsE5
/SZGqM7gJjnnBDqD16zarXDR659VZ/B80w4b4/NHq87gi/sdjet5JVp1Bk9r
5unx07gY1VnPUSlzfFCZ0l9UN4yDMpW64rB9VIzqBl73WciaCaO+qG7gzqvy
v2g3KlZ1A4/661nHDS3iVDdwD8/VA4tcj1PdwF3bz2y4MClO9eHzSaAPeLfp
GzIk/Rav9Uc+lmtIu0ijY7LWH7zfgNaZGoUna/3BD/YxitdYlaLlgj+UPBnl
8r5NPBfmeC7M8VyY47lY7ReV9s8c7Z85dOBxIn4XOP8uXkfA72KO38Ucv4s5
fhdz/C7m+F3M8bv4XAs8X+Z4vszR3sAbbribuLNOsj53cNaH1zugD3Powxz6
MIc+zKEPc+jDHPrweRTQhzn0YQ59wFkfcNaH12WgD3Powxz6MIc+zKEPc+jD
HPrwORLQhzn0YQ59wFkfcNaH14+gD3Powxz6MIc+zKEPc+jDHPrw+Q/Qhzn0
YQ59wFkfcNaH17mgD3Powxz6MIc+zKEPc+jDHPrwuQ3Qhzn0YQ59wFkfcNaH
1+OgD3Powxz6MIc+zKEPc+jDHPrweQvQhzn0YQ59wFkfcNaH1w2hD3Powxz6
MIc+zKEPc+jDHPrwOQnQhzn0YQ59wFkfcNaH1zGhD3Powxz6MIc+zKEPc+jD
HPrwegH0YQ59mEMfcNYHnPWxOk9A9GEOfZhDH+bQhzn0YQ4dzH+PGyEV533a
38RT81jMdzUfdf7P1ZEemsduL78v2C3wgDF23O1R3b/s1d87SManS2l8nVH8
hxWfn3/4Pxf097YV/1se/OntdM9bf+8i8V8/d6ERKSHHtZ6zV008525/1Wh2
/OiJ510eaz3Nf32Mkn8sPn1/7SOtp+lUh34vvS8ZGZb3rhl++oHW84CM4x7R
eHO6+C9Yb9lKe6eXWs+O4j/HBL8N7nP+0XrWFf8XY+a/+tjmheo/odNhY539
OWOUb+kMbg2eqf4/yPxb5oLVnh6f7Ke/K37wXxH2DneNZXPqla345J3+LvM+
oDuGMbb5pXVJ7/R3mf/eNpokbGjcNeSdjoNGyHpo7E67cq4L3+k4qFFivieB
3jeM26dbXjzu91bHQVm/r//8bdjdWtzzZFyQjh/9W7dqf8b1uhHVp8jkSnFv
VLcyMo5rQOPHaKl/RFSGGtniIlQ3H6n/ksP2tU0DIlS3NVL/HOtPn4raHq7t
2VnqP+noqYtlzoWpnnWk/jdiy3W4+9cn1e1MsbjVgd6+xsx3k35+uiBadcP6
XdWpa6v5r4lW3ZZ8X394bLwrHbXu4b8curnJ+nXWllVP/9QvWnXz/L7e9dCo
+qTP4BaPo1S3ObKO/GOd6hOPvPis+tyTcWIBGj+eknqOquW22O9RnNZ/4ry1
HvYO/kbWTEGT3Ep81fpjvXjD3DHjXnsnaf3bVK42zN3+mTFp/uzDU35N0nKX
2Bg/jhf/HE9aih+OA7XCal13DbTsZ4P/NjbGcTXEnuNYIVqPRrmpq2/NCvQO
sIpjH+j7dDz3+w2dGzm4v7CKY6do3xri/LbApChv1+dWvyus+/2X3q5vrOI8
f+8DnS8kuWywd3htpYP5zxsrHULFP+vwmNYxocNZ8c867KLvH6HDUlkvYx3G
0z466NBX1mFZhyff6/vWSocO9B0TdLhYJ8MLb9e3VjoMsjEu8xP/VuN6WoeF
DufFP+tQi77rhA57Fjw45RpoPW4tQvv6dL7Cf/NaewfrcWtd90xL7R2sx2X7
6fss6FAi+JFLoPd7Kx0u2hh/1RH/rMM+WkeGDsXEP+uwgr5XhQ52Tba1crd/
b6XDZNpnCB1C/xhZxsHdeny6ur1fIQd36/FXJvruDDpM/17fYCsdStgYZ60S
/6xDRloHhw5TxT/rEEbf4UKHQRGjH3q7Blvp4Ef7HnWex2h8xDXQehwambxr
t2tgqJUOQ+h7Oujg38V1jr1DqJUO022MpyLEP+vgTOv40OGp+GcdOtL3xdDh
4q6fnAK9Q6x0qEP7MKHDvtgsTdztQ6x06HTMrZa7vfV46gp9JwgdGmRsnsvB
PcxKB38b4yZH8c86XKZ9CNChnvhnHQ7Qd9PQwfzXely5ivaFQoeMh57+7e1q
Pa70GNbigrer9bipNH3/CB3cvXNucg2MsNKhgY3x0SHxzzqUon0Umi+Jf9Yh
M30PDh2m53g+2d4hwkqHCNqnCh2cB+ztFuhtPX7MWixPx0Bv6/ER72uFDp9H
B9i720dZ6bDGxjgos/hnHabTvhHoECn+WYch9N06dHh2aX8GB/fPVjo40v5Y
5L3vJzr5uwb6GZOXH2g7eHG8Zd617P/u49K4/T1PtHxngbzxkeQt80fvONd3
RqryDGvM+c+zsNotXHanqs633+Wu5Oh+yrhcOLlLq8Azmgdivf7R4Ec9hnf1
0Tyw/x4/lwuuW42Pf22/fzZ6ufJFMu6IrHx5cP0+NzS/fSX7OXfLOWzgkcLv
E38l+wei5Xw28GDh34TjdzWV+sT/3uH09vNrLOuDMo57VHha9yOPDiifLfXs
vTnhUpaGd5S3k/HU21uXnIdX8NV8e6yME+PWjy90b/YJ5WVEn1Lzdj8/6HNT
eXcZr73zfxMZWPiZPt8iMg51P3Xrz4ihZ5VfFv3DM7z9ePf4dc2rp8p49piM
Z2E/X8aJCyes+3trzwBL/iN+2v7aN2x15A1tPyV8zftJZu0yf5cHXk/qX6HB
yUqLxt/XduUuevYJd/hzcZlNlnkA0W2f25wzp+/4avu/Ic9xo5wLB57lvJnX
Ofq/3FeeYx05Lw48Rvgg4YgPZUW3ud/yvolYdU25r4wTi3VK6lKjUojydBkP
Vq2es0tw/y/KHQrNmuHgft+YE3t1wKa6capnV+Etvj3qG97UMp6qJuPNDjLe
hP05GU9Nmx6+8UM7ix+s0yX3bWysyRqvz6Wv+HduWOCdgxGt+i+VcVyZernH
V3kYY8nPZdw34NDGua0Hx6o+Y2WcmEfOhQOfLLwY8Sr0HRZ4HeKIV4ek3MsB
ncddvh6nfIWMWzN4brK/Vdtin5/iD3hHGt8h7k2X3xu9u5ejx3/77IUn0T5V
cGf6HhzPMUjiJPPpNN5E3KguvzdQzqMDryn8NfEQGQ96yzl14J/o/DrEjYKi
w8u6oyt4Dk20xBPRoeX1xRWuVfyqHOuY7W4Hz3ncNUXjRoroMHrXEtdNQyz9
Ql0Z5+a63TzcuX6Stqt9NN5Eu7pI41PN62g8i/i/R/xcL7o9V8zKFI3/2Ne3
asfR6APV0jTO+4qf8slTF4/57ZvylTJORP8L3fbSOXLg+4lDn+XiZ8ttp+JN
D1j6r0sybgWHbpNkHHpva9eXbpWSlT+T8S843mt834d8APXn7+ZQTz4HD/o7
0zhX/cg4kf3wuXO2OJ77UxnP8nNfReNKlJtRxmVcLp9HZ4uj3HoyfuRyI2gc
h3KdZRzE5fI5dbY4yl0j4zUu15HGTSj3sow7uFw+v84WR7mfZXzE5R6icQrK
LSV5PpfL59rZ4ii3s4xHuNysNC5AuTMlr+Zy+bw7WxzlHpb8n8t1sZGH+3yP
r9bjjheS33J9htJ5d+AuNjifd4d6ZpP8nOt5TerD+TP8wB79wmWyB89O+T+4
rXUK7HNzTp7Xa0SXBibUH/vihso5dYhX4DuGhk0+2eW8xiVwj5JBfbqYLmr9
wcfNb1ZxcLXL2l/rvjs5Xw71xL6m4e9P3g6ZackT+PsO9MvM0c8yh3/m+L18
Xhw4n8MGHcA5boNzfEa85fjM57DZip/wA85++Hw2W/EQfsDZD5/bZiu+wQ84
++Hz3GzFK/gBZz98zput+AM/4OyHz3+zFU/gB5z98Plv8MPnYcIP+ENqn/i+
r3XWuj51+1raJ5+nAT/4fqG5nP+m6wXCyzocPn10h+W9Rj4w26nOmHyV0jX/
Aa/UaXKjH9um6+8C9216NkPtoZY4xucbg/O5cOB8Lhw4nwsHzufCgfO5cOB8
Lhw4nwsH3Wrb0K29jfUaO5lPqNTt2Miaf1r0SZd1lgzJfz+I8bTw2jbWd3wl
zhSTdSvwqlKfplIfPPeLMv7ieDVfxinguj4i44UxJaLObQmxjMt+kLw9tU2m
vrvcLO1tL32PCb5V+D2Kh+0o7oHb2XjuGW3wQTbag7MNftFGO7lsg5ew0X5K
2eDTbbSrmTa4v4329sIGb0DtELyRDc7nuaGdrKT1R/BgG3n+QPp+EOMmPrcE
vA+NQ3W/H3H0d+i/0N+hf4f/rivy1m7XK1H5FBm3RpWK6PhbhSTlreS9W3jj
3Iec+xK13K8yTrwr5aI/RfzhcdAZOg8N/ILw2sSLi87MCxNHHMD32qsnL/B/
PNFd+Y1v51JrOsw3hqfOz12q+lDl3WV+KWejluWzdlyi8Rb51aCBzye8X9XI
BA7/F27e8Xv623p9jrB38qmxyvlxExM47D8Wy//oxcINlvlD4cdlvhH2p6We
hWt7FPspYMT/eX8jvvv/r5HUKWj5HkTPT+vavvng9Vv0uceLn11Df5jl4DRa
dYP9Ra/hMXW2bFN+Xr7z8pTzx8CThY8fZ+ZoD/DTKUfcLuedO7SdQ4eFcu+w
tiupT5de6bddsrmpn5mif9e7H384mWud5X0R/43kXDJwO7uxZ6HDmryt9XuW
B2JfROwRV1Efu2VFth2s0cYEDv+Dzly+s7PXbrWvmG6u5yPPrp7d205QXl7q
6Xnv4Zl79/7U9g//M5u2qjaiS1sTOPzPP1l5a+t+e9R+i+g5R84lw3wI/MSF
jzlrP66dCRx+Dh5bMzZ4wF7Nq8Hvyzwn7NuJzjVLBBx9u2WS2tvZHVXdflln
+R4HeUu1nyeGuuyP1/zci/o1tKu9Mj+TY/Ln962iU5TXlP4U8/ngeo+AcLRn
rINw/HShvAu6oZ4fqjYa8m1FrHL0g1XknCtw9Jt1iWMcsULOv4Ju8J8aFNfk
nmGZtwQvKPOZsF8o/XtKyUfFX0Ra+HnRrfXh8gv3lbH453gO/8xh/07yhHKn
Ii82W2/hqD84npfVPTuSJzDHew2eqW/aH9viLPEfzwvjVsRJno8C5+/fwVfQ
/BviJ/tB3OPvJtBO+BwntBPMB6KdoP7wg/rD3oH27Wi8ovEdOMpl/8if2T/y
KPZTi8Z94PhulP0jD2f/zrTPBHwFjQfB8T0p+0c+z/4v0/4N8DAaJ4LjO1P2
j3EB+y9F+yLAO9L4ERzfn7J/jC/Y/0zabwB+gMaV4Pgulf1jnML+X9A6Pnhm
Gm+C43tV9o/xDvtvROvj4EMpHoLje9WHHJ9lvpfjMPYv8Tw25iWYZ5D5W/aD
/T9sj3kJ5oNlPpb9YP8M22Newmq+XeZX2Q/2n7A95iWYl5T5UvaD/Rtsj3kJ
5jNk/pP9YP8D22NeAhxx+wfJK0JNj1Y0DNqi/G9ZL+5y/ZbXnV5eytHvxxwc
mq+6y36N88slr3Cc+N/5RRuUL5T14h0Vq5gO/HxBx6fw02xXA6/xYw4qryj5
g8uoTmFOXtOU75F6xg50HB1db7tlX6X0jw8nTltW958vWq6d7Ke9lpCcfcLM
UOWPZR/s0Ezxdz9tjVaO+cPPdl4FM93/orqhnzJtnNP6hx5JyifIOCUp8eOZ
CHfLuGCgjIN+lPOFwPsJL0kc84d55dwhvF/hNF4Dx7iP37vnMv/M7SFK9mkw
x/wS2oOOZ+kcHuQJd6Xfv0f5g5+N+dUwWpdE/NmJ/G1Qq9XL6lrGd09kHY05
9AFHPTvYmGeYbKO/Pmijn8W+U6v4b6PfxDk2VvHcRj+I82qs4rONfg3n0ljF
Wxv9FM6fYX7YRr+Dc2aYZ7fRj+A8GeZoJ+B4T0/JvotL5Z/47/zrgfIlsk+j
95d03/6H3ynHfH6RnWe6zg6+qfneR2k/F8c6nR452/I+Iv/h+LZS1gG5nSOf
YftwWb9je+QnbO8g625sj3yD7Q/KehnbI39g+yyyzsX2yAfYfpisT8Ee7107
GT8u/eYTft9pitqj32c/V2U9CH7w3iFP5vfRSfJt5qsl3waHf6wf8XoH8k+e
n8H7BQ7/yBOQt4Avl+fO9dkveQg4/CMv5XLxnnK5yCu43E/SfrjcTJK3cLnI
V7lcvO9cLvIQLreDtEMud4jkOVwu8lguF3GDy0XewuXul/bM5V6RvIjLRX7L
5SL+cLnIc7jcTPJecLmlJY/icpH3crmIY1wu8iIud4i8X1zub5J3cTvPIuun
eI9QbifJk7k+v0n85PqgX+b6XJH3lOsTIP0+80j5DoL5Odk3Ao7zCfHd2c26
a8t02e+h51eDF87e0rj2+Zqe24zvvPZP7HV3SpaH6gd8R9MTjTvtv6P3OIA3
Dd0RNu/YY71/Abx80YLRHQf46XmD4D2+9J11J+mJnncNvvZZhse/zHqm5+qA
+51vsKVlvL+eewZ+PmFm9iUuL/ScTHCvIyXqBycF6Hnm4Aeczw9sszJQzxvX
31W4/9Ld5V7pOZ/ga+5+9Uo//Vp1A//7yv3PtSoG6Xme4C22lMo8KCpI9cR3
ZDc+5a22o0aQ6gn+zfG1+7jmr1RP8NyenjmzXHireoJ3n9g1fIzDe9UT/HpF
n4oNvT6onuAlDrVt3P5tsOoJHtekZ7eXiR9VT/DVZwdHlU4KUT3By1f1+aVE
10+qJ/jJzWW9iuwLUz3B2+WcV7BgcrjqCf505tvJ+X6JVD3BR4W38s914LPq
CZ7ktKdx9tQoPXdL/Y+Y1zmjR7TqjO/LCi2YkTf4XLjqDD7wq189x/2fVGfw
+7nLhs19GKk6gy/ccPNGifdRqjN4iyb12ry/Hq06g3vuPdu1b8sY1Rn8fPUd
35w3xajO4MVzpw2o8yhGdQZ/LOe7QmfwMDmHHzrr93Ryrj50Bi8r9zhAZ/Dm
dL+Y6iD5HvTEfr/Ld6ufPPoyTvUE/1ShX/fiQbGqJ/i6Cd8KtgyIVz3BRxbz
nfzkmeXcV/CHfn2Txk1LVD3BE3vVqHDo50TVE/yW38DANc8t5x+C10k4Vq5x
Ecs9aOAZK0/ZuHWA5Z4g8P3ZEkJ9F1nuKQDHuAZ6MoeezKEnc7Rb5tAZ61ZT
73ZrHvN3quoJXrVGjkum+mmqJ3jgSh/TH7vTVE/wxqGPPe74p6qe4Durn+7Q
d5Plvnhwvi8eHPWEnsyhJ3PoyRx6MoeezKEnc+jJHHoij8V8L9qteXhj+T4R
OrM9dGYOncFxXi50Bsf9TeAoFxz6w571B2f9bXH45+fC9uBsj+fF9uBsj+fI
9uBsj+fL9uBsj+fO9uBsj/bA9uBsj3biR99pop0wRzthjucLjueL58LfaUJ/
5tCZOfRkDt2YQx/m0IG53tNB32PqvdXE9d4N4tABnHXg7zGhA3PowBw6MIcO
zKEDc+jAHDpMpe8uoQNz6MAcOoCzDvzdJXRgDh2YQwfm0IE5dGAOHZhDh460
Tw86MIcOzBE/mSN+gnP8BOc4CY44CT35O03oyRx6MoeezKEnc+jJHHoyh54l
aB819GQOPZlDT+bQE5z1BGc9wVlP/q4TejKHnsyhJ3PoyRx6MoeezKEnvq9k
PZlDT+Z6HzFxvf9COOsJznqCcz/O34FCZ+bQmTl0Zg6dmUNn5tCZOXRmDp0v
03546MkcejKHnuCsJzjrCc568v526MkcejKHnsyhJ3PoyRx6MoeezM3n6bzV
839+PlL8UOf443IeTZjyI9cnOrV/6GV4f9/nEaPc6UDoiTZ7T8k5JgnKlzrO
TIyb4C3niSQr7z5l/qZ001k5hyKDzvNkLWE+F8h8LkNm5R/K91rR9q9Lck5B
VuU3q1fJbv/7FfluP7vyHlvSrs7z8JHv2C3zSH+XCZkb435VvuvOo7z+3sem
IbOuyXfO+ZQ3nGk4ZTt8Te/l1Pmf9r9mqDPGV8+BB7+QuuLEi4xP9L4zcLuu
Ht8C5z/Ve8rAu2U48Mf+r8/0fjrwUnK+UCa5Pw789znlKgTleinnEWRX/mH5
+GM1N7+S7/NzKvfwLbixfUF8r26Z/yl/dNjRKa+C9Dxw8Oz/1Kq2vOxbOR8n
WudhXr52eViw5wc5dyZe+e85z65uvSxY9hl/VZ790zLv8Xs+yjp3Fp0PKSTn
/JjXrbMrP5C5SJGI2AhZh86p/KcpU6eFOnyWdeXcyqOa9Ajdsz1KvjO3zLdU
WFTx0uM5+M4wTuc3ancsH9M9DN8TflXudOT0vVKdYvReaR6vdZL7bpgPkvjD
47UDEn+Yl5H4w/yexB/wIRJ/ltC47IDEnzYSf8A/SPwZZGOcddHGeKqEjXHT
dBvjI38b46AGNsY7V2R9jcc7a2yMd2ZI/OHxS5TEH+anJP6AV3+2eN3asd+M
8RJ/wH+Y0TRqS/kUo4bEH/BfX33y7+SdZNSROMPjjlUSZ5hHSJxh7ihxhvkh
iTPMM0ucYX5F4gyPX/pKPAGfe/jREce5KUYhiSfg4U02jwhISTIyStzgcYSz
xA3mlyVuMC8lccNqvCNxg3lLiQ/I2yMCXUYmB6YYqRIfwMet75gwotVX46nE
Ac7z60kcYL5G4gDzSIkDzA/I/Q6c92aW+6GYD5H7OJibz9HIbZXvmc+VyGvF
HSVucN5i/p42TecJ53zLFnFrXoJ8T/tN+UbTqWS3BQmyDymTzstd/yXvop9X
/ZsnfN+HlMlqvs683yiLFX8p94MgzteLGdMzutVdOW/iqfbLt2eWrldogafe
KwT7n+JO7l6w+IER+P07//dq7/Ps1/sLSpwwcH8Q7HelzJ62fPhjvd8KPEDO
YRgk60HwM1POYcD9ArB3rLl2zuo//GV93U775Ym3qj/fVuO8UVzuo4H9u9n5
hq1NeS7r6xnVvufjb91npV8wpsm9Y7DvuHxQ1OulAbK+bsk36gX4PnTyu2Q8
k3vHYH9k01+/1SgSKN9hWvIHJzkPAfkVeONe/e4Xcbsu32fm1X7q5Y/jlr3o
jO8z81rNb7vY4HvlHhDwr2Pur1ibFiPfb1t4snDcG4L2sGSRQ9O/5iboPYOw
v5Z+ZsualV+s+HXh5u+oLfPYfcdNqb+m5r/t9vu+ugzK9w3ql3BxTILeZw0/
L5d4jw3tF2vFXxGHnx4bG/o0mpCg91bDPjHf6RYtK8VZ8STiOj8/zbuA65YE
vZ8a9j/Ifmbm2Of8XOISv0e4Lwb2Ncp6vYu6HG/FawovJfsirObhJb4xx711
8NPh0PFTHZZb847CZ0pcYj/Il6zWBaQdMo+S+Ml8meSB4GvGLmy+Z0ainKcQ
r/zpT0OTg6dY7qNBvvSyiOPP646lyDk4SWrfa/WDQ0+KJco5OF+V1yjYOaRh
Gcs9KfCDe0xwfzrnY7hPkDnuDWTuJvf5gr9oHu/W/2Lqv/3tyLP/v3l4jN9h
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxFnHccV9P/xz93nHvvxyhlZlPJzErI11aRtJBRSWRnZO+WipKRlRUR2Tsj
IyQhUpSWbEX23vq9nr2Ox++P83i/77nnnHvuuee89/tudNSp3U5Ja7XaMUWt
lgkuy2u1qUmt9o/gt2Wt9rrqRurecDUaprKf7r2ge/sKjhasqzymNqep8wrC
HxfeX/jqwl8WfpHwZ4XvpfaXC15WaXzVD9eYla4fFX6q2nygZ90ivI/qO4da
7Vy1f0r3t1X7W1V/lOr/Ubs7hB8t+LfKOOoFV1O7l4RfKPwSzfEYlb3V/xCN
c6Hg87q/g8Z5Vm0u1ji7qwwSPk/tf1a5Tvhhgu+qHC98B8E5KicJ31HwAfVv
qXHOEFyg6zNUv6vgw7reTvXnCg7UMw9T2V7X83XvdLX5n+BHeq9JrIOeuZ3w
wWq7S71W+1f37lR9X8H3Vc4SvjvroHKO8D0FF6mcLXwPwYUqZwrfTXBvvdfp
es5DGutA4ecLnyR8e73jA3wLPet91S1U+VHX66jNn4K7qM1awn8XvrPwNYR/
qjarCTZW+VD4KoKzBd9V+VbtPtf1poJ3acx5qpur8r2uM9V/LdhC4ywUvq7w
sWrzifDmwscL/1h4M+F3Cj9Ja3OiSgNdnyB4vMrfwt/UeNNVErVdrLKZ6u5W
+4czP7cSfFRlc+ErCE5Q2ahWW75Z71HZWGgiuJPe/Q3hl6vv05rTbhpzuOCH
WvP72WOqn61nvqvyjMq96tNU9SnfQWUd4X+qfnzmd/lb+COZ51MX/E1z20X4
oxpnma7Hc2YElwTPbYLq78/87rngfZnfPRP8XW3+J/wxtXlP485ROY1vqeuL
BV8THKC67ipb810152bCHxScoPK46gYIbqKxDmLP671uVt1xKgfq+ny9+9Gq
+0bwSj3rRvW9QnCM7h+fuM/WqtuK5+r6PrU9UnV/CV6tuhdUd6zKOJX+Kiez
vhprM9ZAz12kdier/h7BjTXuKcLvFX6d7t8mvJ/KiyonqBysrteofqzwk3iW
+m/IegtOV+kg/HXBHTX+fsJfE/6T+hyqtmsITtH1HsLbCB6t+6OE766ylp73
Ht9XazBC9Zep7K/6+wU7q+xDf7WZrTYj1OYfXT+hcqLKBXpWX+iZ4ATBzmpz
uODP6rem8NbCG6q8KXyI+u6pZ7/CuRO8Pfe8Wgmepf67CY4V/Ed1vRLvm78F
H1U5QmWQxuypsqPwx9S2teBFgp9r3MFqu5/gZ5npz76Ci1WGCO/Aty1MA+cJ
/qDr0cK7C/6oco3wQwR/UrmW9RLcT+1GCZ8lOF/PnKcyQNdLoIOC+wu21/c6
k/lpDu/r/kL2hu59r3tXCx4suL/anM16qc1HwefiDo35he4NFd5R8Cndb6/S
jvdS6Z14T/+i8dYS3El9fxXeRHgb4b8JXxsaKPyO3Gdnb8GNNFZb4fOF363S
QfhcwaDxjlTZB1qj6/0EFwquqTIHHqR+l2pOrwrfS9/lS10PE36AYGM9q5FK
H/VfXXA1laOEbxgMx2uMYcH37xT+ivrvyfwFPwimJ7dm/obLhP+r8pPatWBv
C25W+LwMrMx34FmnwCx170mB04X/CT8Q3k+wv+o3Ye8JPpN7/14meHZlegKd
+1FjbiL8U+EPqc+OwteI9G1b4Q0F71LZWvjK8JzK34Xv87P6thD+mfBfC9NJ
6HQ/4ffwLfReiZ73lPAz1PcvlUeEnwwvS80T26q8HXxurlTbRioz1Gao2qwi
/C3hl7C2wt8WPkz4fLV/G5og+EbwOR2h+yexttB3wSf51qq/hO+bmo/vqvJr
5rkdJ3i3yjbCGwj+wjsLP1ZwKnRSbYeq7/HCj1D/44B6rxvVZlu91ym67qv6
kwUfVJ/Wql9d8Cu12VD4+8G0Z6jKRip/IxsI/i74B1Clucprul5NsGduGjZM
pWmkGRuqrM8+17i7acy1BbfTuA2gt2q/tfCVhHcW3lxz6qc29ws2LS0z3APN
UzlReHPNa73CNHg91e2gvk3Utw/8WvgqwrsLPzM37X9Q8KfCZ+oqtf+hMI26
UvjeKu8Iv1Z1eTB/3lztv9Z1Y+ie7i8V3kj4ZcJf03iPqHyp628K73P2exnM
w1uq73eFaVtbySTXVOZ9y/l5MH+G3v1S+FxfrTH7V+a5H+p+f5Xj4CmCX6rN
BqpfJPw34Xuq30Easx4sg2ybW06bJfxSreeqwmcKH55ZNkJGukFjr6xntBEe
VLdqafqwGmMLPwa+XjdvbKqys8beSWUD4a0FrytNmy4SbKG6ZcKfVVlB1ztz
XDVOKXx/5FeNs4Q1Eb6P8Jbq/5nabAy9hz4IX1H3V6c9e0x4Tfh+un+w2ufM
TXh74acJNoPXcu5L0wpoxjS926HCt8jMg7oL36Awv4ZPri/8Kd3bXnhjwSfZ
Z8IbCU6MdGAVwW+hQRr/VGTqxPv5c91bV++4jspi4dNy79/jBAcjD6huK2Td
YJ5/P/xTZYjwKdA2zbMPc4Om5j4rx0K3Oav/nRE9+zC12VJwTbXfS/hKar82
exG6JLyHxh8A/1ffzVV/tmAfrcl1lWUbZJxbU8ur28b9zT4/S7C3+h6se0cE
8yPk+T6CK+bWES4WvlJumj9A+PmFadpues5zuWX8KwTvTS0DQ9M3070L1GZX
tS10b7Lw8zLrGi8Jv0B4KfxF5CbhQfgLws/NvKfZ2+PU9ztd3y78SMHZPBu+
I3iU2hwKrxF8JLe8f77gljxX8Oi6+Tu89SDBkZXliis05tZqM1BtjlGbLYSP
QAaAdwvvq/G6sQ9L07oDVT+5sk4yRfiHgpepvpPgTVGO20rlo8zjdBZcqjJG
+OGCj+eWQQYIfpV5zB6CF6beS2sjz6WWwaDjxyIXJF7Tu5CnUtPiF0rDVkDV
7cK50/UiwTYqOwlfILiDSiv2QWl631rw+NLrM1fw+dJtV9I7/aZ53Kv5HI9c
r35PJp7TvCgXtRe8MjHvXjmx3tQmMf3/VvduU5vegkeq7+WJ+c2O0ADmwZkv
PZe6nvWp2l3Fegoeo7pVVbrw7dX2PGQX1iLCNZFBcu/zDdT++ngOeuv6ztJn
b7jgWmq/BrKGyoXBeG/1eyhxH2TlE0qv/0LBr/lmGqOn4MXq+6fqN4dH6t6l
rL1gk8Lzul54r9z0Z321H4X+xboLHliaBzUQ3LS0nP4MuqzuXaA2A2mj+19A
NzjbGmdVZBvoXWmaP4Z9CC0WPlbwlsx881/1vy4z7/iGfVGabt+ILqYxu6ks
gYepzweCo9U2TX32D1CZo2d35P11fx1kTfiX2myATAnPEr4++pjwa9CxhC+C
pwhfoH7zEz+vfWm+doOe+4bqXldZCj+ovMee0f25gttQ4Ne63lL4Y4Kbqc0W
wh8VvnZl+e1Z9G7VbZua/iSV+z6lNnNULoNmCv6heTyk55wkOC3xO8M3Dxb8
pmb+2kJjHcF6qv1Bqv+q5vWaIfytxPpwl9y8pklmmRKeu0zPu0r3j1ZpqHJQ
bh53PvQvyrrIvA1Ly67jBMeW5l/oX2NK0+QbBTfXHE6t+b2wmSAjra93WhV+
GfvCN5ErDhJsrPpVVH+78EbCV0JnE/5A1DHRNXeAtiNDa5xdhLcX3lj4+NI8
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
           "]], Polygon3DBox[CompressedData["
1:eJw1nAn4VsP7xs/7nvXbQrSTNpUURVEpW3spJJUkWlBJZBcllF12yb4kyhZK
USJShJClEJKyq+x+1vzvj3v+19VczTMzZ855z5l5lvu559to5Pj+p5ajKJqX
RJH+RXPSKFqhhjtUn636ZpW9VH8wjqINRRT9ILmp5EckPyr5eslnlKLobl1z
g+qPZFHURv3V1P+Q+h+V3FbyDpIflvxJHkXHaewYjT2yQu36X83Rp5pjR9XX
qX+o+k9Uvb/6H9T/L0mepjEPqF5fg5dLvlPyeo19TG2vS64i+Q/9X0tt1TXX
0fox32hsQ5WX1f4I91BfJ7VvVv93Kjvr2odVXlH/w+p/SPXGGn+C5HGqD9P9
Z+n/FyVfoP77VW9Q+P2MCs9fTf//or4N4flrq1SS/LXkuqo/pt+/j+Qd9fsf
0bVzdP9bdP1d6v8k8fONkHySxh6n+W7S//dJvk7XbIz9+16TPFplvOp3a756
6vtT8j269lr9po80VxX1ddf1heRKkveS/K36j1C5M3ybo9V/pe75sPrPU1mk
em+1d1T/Jyovqn6IygFlt/XX/U+XPKbsd8z9c813l+p76/rFulch+SI9z/ux
539MbU3U31j9Q1WfoWtmS35MY37XmJ9U/1B961Qqqe8J/Z6O6qurvsc119G6
Zoz6dpO8RfIOKk/pmv3Vtm/udcH6YE0cr/p0lVmq3605tuiaIRpzksY2V30r
31/zj1LfCsnfF/6eL2j8YJXh3F/jd1d9mMbcrfopalup+olqO1X1a1VO03x3
8E1U/5l3JXm9ynaSf1TZV+Mf1fyfaf5Kut/hkpdI/lpyTfV/rrGfqVRXvUL9
h6n/WfV/pf4O+gb/kzxE/b+Ge3LvV8Ma/Ev9y9U3XuVh1X9X+TJy29+q/6Py
leSXJf+r+tmaf57kCtU/1vzb9D/7e0XoH6s5F0keqcaTU6+Hg9R3jcrXql+n
0k31w9V/dOrrmbu/yp2Jn2e4rn8x3P8s/Y6nJR8ouSx5f13TQtfuLnmr5JmS
l/K7NOY+1ffQ87WWfLDqh2q9vKJ3fr7GHil5f8mtNF9L9U9kPfJO1V5T17bR
XDur/ziNb66+a9TeR/Ilap+j689VWaj6VSoHq95bYwZqTGvNsYfqO6ltmepH
qP8n1X9UaZD6fbD/VqIjVN+oUkv321fj6mv+N3S/vmW/k5WqD+a5JU+SfJTq
l+odz1b9C+7LeP3/UORn+lL1HdW/oOxn6pR7PWhYtElyLdUv0jO9LLmL5Koa
/6bKM5H3KN+jnFovr5acouskXC15luSNidcr+uoNlbnsZbX9of5j1P+b2mqo
7bfIa5D77ZdYN32lUie1/kV3saarsrfQa7ruQsnH8E345rp+qOT/qf1d/Yb+
+r+v5Ddz60ve3WJ0oOTdEj/rWyqxrv9Vcn/1PcfzqD5epa7q88P6GKpSQ/W5
KptV76trDtR850juw/vVnItU/4F1qRe3k9oqR9bhu7A/1d5V9WtVvlV9jMoC
1VuqnKb641pv+2l8Hb3nuXrWX9S2UfLz4Xnmqr+D5NroWvWfI3m+5Erq+6Tw
8zP2Bj3T1brf6NS2YliwYSPRq2XbCPTJt6w5bJXm+7Tw+n+etahyLLZSv2em
5jtb875UeB+wH9AxB6k+Vdf1k9xd8vYac6/G7yC5FzZEz/ZvanvSXX276n1c
ENbD2SXb8Ct4J+gqlVnoFvYc6wtbo/ELNMcYyfvoPvN0//6pdXMvjR/A2lY5
SPUNKi+rfoHKeaqfz5pQ/XKVaew/lfs1Z3c937e6/hbN17bC3xPbdjn7RfVz
Yu/FOSqx5CmxdcsjKtuhj/iN4Xudrvq56j9EfZ0lJ5JP1jO+ofkvVXtNzT9O
8puSL5NcS/I1mdcr6/YIydUl91b/QF3bXPJ8yV0k19f4J3TtsMy6YoH6O6n/
Pj1/jbKv4dqnVLqq3kDjn9T4CzPvd/b94Rq/n9q+lbxWcj/JC9V/EvpC4+er
r4fm2yx5huR91H+X7jNI9/tebS1Z3+r/XfXb1d9O/Rsln6z5ztJ8A3gejTlW
4//RmINUb6Rxw9n72GvV71HbYNV/DjpxrNq66foHyravv2meluqboP8Hab57
NeZobEvQab3QAdxPbT353rr/n+q7Q9e21/hhXFe2zma99smtP25T/77qv0r/
X6Bre6BPsD8ad5zq4/T/2RpfQ+/jEI0/Sn27a/wRqZ9vEz4Ea1PXH6bxJcl1
NeYwtXUpe80dx29hfZftU3ZN3UbfzLLte0nzn6L6ueobWGF/pF3ZPkim+nWs
L117qMpOmj9W297qP139ZdXvVttR6H/JrVlfGt9d/Qeo7Y/Y+6Fn2c/Mu+X5
8C26Su6Xet+yf09XeQzbmHv8gGC/Lkpt+y5Q28Wqt1KpovogzbGU76fxVSX3
xCfWb7kNfSJ5SeT9wZ5ib12tcllq/3eZ6scEf4c9zd7GhjXk/bBn0JfYTO6l
e+ypuUol7/kTc/tH+EnH6Plu0f8TSvbJ8M12zqyfr1R9sPrvQB/wrSLvz06p
7W0zXXNSYv8Q3xQdja6+R2Wx6ovwaVW/U2Wu6usif9/KsfXPGWWvyZ/1PNer
flW430/6v536H9O4jfo+09Fh6v9L92uCvlHbQ9grtXeu8PNskzwj+ABzNV9T
1io+mOqXqO0yyW+qTMF/Qp+pb77m/0Jz/S35YMlPSf5S8h/YG+IfyZ9L/lly
e8lzJW+SfG5hfYfeO0r3vxmfWfe/Sm2Xsn8Sf6tKKi0l369nqKv6Eego1Y/P
7c/j1w/R9Y017xLJz2IzVf9Q199e8h5nrz8i+Qn1tSrbHpyq+6/WXFeor46u
vz2178E34lsNym0/j9F1HdTfNLXt5hvwLW5N7V+xxlhrzTTPaMk3qjyv+pn4
EJHX86PYS83XjL2ototUf0pt88uOCbDHEyRPUt+ZGv+46k+qzFNfh7L1yVza
VG9b9v59UHPsUvYam6X6PmqrXbJNmaz6Kfp9b6nvcj1LbT3/Z+yBku/xmuov
qmyP76nyser1MvuX+Jl9Nf45tS0s20fDH/so8djjVR5QfRg+ieonq76fxo/R
9bM097+630esLfU31LUNeIeqD9O4CWXvqUma7wG11Svb5945d1xBfPF52M/v
afz0kt9ZR41/Af+tbB8J/6lKsD/D1d5C9x/OHBp/iuSOktsl1s3o6F+wkcEf
6av2JuqfrXtsHzsGJxZfljpW66DxLwT5Y8nXRo7fiLmJvfcmHpK8XGW9+h+V
fJLa5xTek9iIr1Ov9+aqPx78n8Uq+6t+htpa6Vne0nO8wt76f/9Kz39V8D3f
KOzjbNP8DSP7Pg9KrtD1u0s+R/W+mmOq6l+qbbXkPpKnSP5C8luF/Tfmnqiy
JDHG8K/maxR+L78/Umkcfs/fqp+KLSdGy4wpgC2AOWxF/+j5/tFcY4nZVP9Q
/eOx5eofRSyeO5Zcgd9V4TVwemyfj7VR6BkmSn5B8lmS16r/eMkzJQ+WvEby
SMn3YeMkfyD5xNhraojkVzXvZ+xvfDK1zyYm1P8tJH/FepJcxH7nv2XGBMAG
wEi+V/+Mwr4011ZifattnebbR8/8rOqnZf6W2NIx6n8fvEJj72cNEXuqXKb6
N2p7V32HSb6Uby35HcmHSr6EZ5H8tuShkmdL/lXyP5LHsEYkd8TfV32Q+u/l
2VT/W/0Xs4+IZfRMR8Z+p7ybf2K/65P0fq9mf2jce5KPyzzfb+rfJrlGYl2G
TrtEfT+oPiL2PbjXbfgbJes0dBvv+Eb1/Rj73R8Re61/pPs/n/qb3CT5p9jf
im8wXfIvsb/NUs1xML6qyl6539HN6v859rtbr3Il7wIfU32r0MeqPxh+w6WJ
1wv+AL5MZ405i/vrmpU8j+RbWfuS/8Sfl3ym5HWSX5F8UOa99CFxnuSWeoY2
mu8zyask1yts38G23lT9SN6Bxn+n/r8k34vNKhvzuUn1Luo/W/WP1f+q5G74
s5LXS369cDzcSfNPC/En8Qp4GxgY+BY2NtPY3SLb3l9S79UnQnw0Xc/3C7G8
yl/4wirnqP8T9b+m/iTEU/00d1Otv50L4ylgY8sLYw6TNPbFyFjEOsmnxcYk
RmfGrMCudpZ8I/6YyoGa62/Jh+WO39k7GzXmNfaz+lup7QdiFPXfIbmF5K2S
e+bWCeiGObF1HzpgV8kPxdYN6Dje3ayg+xbo/11i+wD4AuxJnuX+sFfx+fH9
0dnb1Len5A/L3nvH6/c+of83S/5O5cPUe7aJxj4cey8TYxBrdGZPqO8u/E8w
B8m99bwdJe9FfKO+sZrvNsmvRcZaiCfe0/9fM7farol9Df4+fj9z3VAEvDI1
Xsg7IL4gzuDdnJM6ntgusj9+j975LpHXEGuJd4j/ix/Mu+V5+C17qO3p3Osd
/fJp2TqypfrXqr5Q9RG6362SX1X/xXq2HSW/rfYvy8ZH3lL9/dTxEfjAGtX3
Kmx/sEOjNL51YXuF7Tqxwt+ceIe4h7XQprD+RI+OVv8WPf8W3e9udG5hjBCs
kDX4a+o1S2yPzWQtY8OI5fHhsG27FcbzwEaGa77KqbFHvkeF6vVVtpaMKfyu
+xaS1xJvoXMkb58aX80j430zNV8p2KPTiTfUUVv1W9VWT/Pfr7Zy7DV4pup3
xbZn2MfvMutz1tOFkpew51U+L3sN8E65H9gimDKY7izNkYf9+ouuXyR5P8nj
GV/4nWAfsZe8K2J6YvvRkhtJfoZvgu4r+Rs+Rbyk/rHqb6hnb1f4+/EdT6ow
/sezfFH29+R9va9rNdV/eO3kzPtzdRh/S+K1+k3Z3xubBl40M7at45nBo+6L
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

           "]], Polygon3DBox[CompressedData["
1:eJwt13m8zmUexvFHxznnYShZSkWyZISxS8kuimxZypLk2EP2bUymIVsk+9ZM
TGVpVDSWLJVmyJaliWE0IjWSzDDWXmnSvL+vX39cr3Nfn/v63r/l/O7lKZkz
qO0zN6RSqV2USdXS2hr9MlKpN/nq/ImsVOo635Nex/ryG2gXX5E6Y6X509mp
1GiDdcudSpU0xgL+EP61THN6Xq4l/xPV1C6CNZNNyWVRLc1bsUewbL65a+/g
q1NvfXepW4DtM/Z+2o09i30o2yCuKzdJbS2+iFxd/bdjS2Vv4avQNu2u2B/0
VeX/pf4uNQ9T7lyek68d42nvkd1LNeQepvfUlaFWavPI/YX+xl/RV1P7Xlob
7wa7Oe5b7rr6rdgB/pJcVe1qdJBOxfPTBLkWfD0apL1OzXqaJ1+WJnq28fxq
mst/JPd3dbVogHzdGJ+O8w1pNNaEHyXbynNVVpfPGBc81zr8XZmCVEPuJ30f
Yp/wl+Wra9egDNl79d8S/7t4N3w+aqN9G1ZbX37+r7Kf8lfV1tK+jz7Hext3
JW133Tv15cFaqC0qe7/avPx62Z18BeqEleJvxNvKTVGb43/Qjt8W70umJvWT
u58vbcxN2qvk3qQy/Djqr/YSbVFbLu6FLsf4NF++C3+S8sgMxtZiI/lN9DE/
GK8Qta77AbYfu2jcytpV6Nb4DjxTKbyXbAm5RthbGcn3HN/1BffzSVyHXy0z
zHg5cpmU1v4u5gedlvmnbH41Q/0dRnOM1YCWq72RKuv7Ft8ouyfenXZp119l
rC9iLsV90DK5fvxt+FNxX1jj+P75UbRRez9+hkbz9V1jmUx+qqTvrHHrYL/n
rxu/BHYmvklsKZZFZbGLWEf1fTxHWSzHeMX44/iPfA96Ta4P/xld4B+jOVjH
eF66yD9Oc7FO/A46HOuNsYYYt7vxGrvu2xnJ9xff4UX3txA76O8h+gc2TV1D
7E2ZwlQoxuAP499ot4j1QK41/yXljfGxddiomEOxZsV6QxOxVvwROsO3pMlY
Gz4nK1kvdrjuTprvGjPiWeL9GnMBTcMmY4dizvCzaCpWmDZ7n0vUNcS+k6nq
+RbJPeEa47Fq/DH8Et+R5unrzL+o9rz+vlTGe+kqN4Z26j+AnaVf84epk2vk
uEZ3mqnuXfW7493xJfStlCmB9VK7PdZytWPlmsV6wlfLSPois4z+GHM85jp2
KtbbmEtYAxqFPfjzehfrXut0sgZ8kE7WjlhDWqWTtfF9f2+iP7uHd4w321h5
08kaGGthy3Sy9ryXTuZXzLMW6WS93OJvJf5X9Eg6mYub/X0/vl/jtTTWc7G+
8ZuoJtYEG4mV53Nks+MdqdvqnocZpw12iG9EY7A62FdURO5ZbBs2ie8plw/7
LfYRNhp7CsuM+RPPhQ3BJmNTsE00xv9opOt2x7LCxzuJuS1XGH8cW0495Trw
xdPJ+rjCPfeko5HB/p2RfBvxjVTCHsAWxvos20ltc6wgdTDWMuqBtedX0J0y
d8v+Bx/HP6b2LN+FFhrv0VjDaJKaHTK96TcyT1JKe6jces3+MtOxz7Cj1AS7
CeuG5Yo1TW4D9jR2jR7EXqVuxm0T9yb3bZwNaIFcW5m2cZaI/ZOmYA9hnbEr
sb/TcqxrzAP1U72PaTTL81zhh9MIY6+N/wk9r+4N2dfV/U+meKxX8s/gJfTP
xU9gs2Xeoj/xGXQ39l+5AsZrH99GrLvqT/GDYx3DdtNAuUH8SrWvqbsmUwz7
Rr6La1zF+tCKmMcyw7KTdX5NjEkTZFbhK2VyUWm5c7FXYW/wN8RZAjsf9xxz
WM02+jLmm0xv9TfzE+X2Yb/D+mKFsMnYAWwC1gcriE3C9mPjsU6xbvBP0RKs
A9YV+4EfGHsS1hNbTWv4PFQeu+JeJspNMN4GGuV5Rri3Athaz78u3mvsV3zR
+Pb178T6xNzBnqY7tGdmJGtjrJEDsOIx77HPsZnY0Ni7sD3x7cU84vvLFYt1
U+4Y9pLcE9i1OOPQ21gPbCB2p9wc7Dg2C+uH3RprcEay/sY6/BC2Jd57rOVx
xMTaYV/wrWkq1hSbhfXzTP3jvOEZS/K9qEB8Y3J75Z6TW06v8nXw27Gv5ZvK
rcOKUX3sB+z1rOQbi2+tuuy5+PZiDcPyYa/IFIp9FnuZv4M/6z3Ozk72slVY
bsqkk/x0/KD+bLlKMT+xJdnJea4SVgobhC023qLYB7Gv5GfKTMhOzkFxHhoQ
80buZbnFckXlTuubJbM7ztrGG4XPlKvPr5F7h89LFdz7Vfm345vh03QPdhn7
OPZ5vi4NxxrGfq6+nb7Nxlpv3IKuuwc/Gu+Phsk14PfGHsrXoxFYI34fHYv3
SSOxxlnJu4l3VMyY9Yw5Iv63+C/jDKLvHu3ysQbFPpORnPnj7H8tM/k/xf+r
vroGNDLO/NnJnI+5PybeF98kvvH4f8T9yH+Pt85O1rNY1xrT966xPbJq+8tN
w+rGnqy2i/au3MmciLkxDT+gnds45eOsKVMmK9mL78Nq0QxsHjY/1oh4l/Iv
qBuYlewlG2O8mNvpZM2PtX8pX4PORx0tiHUtM7lWXHNRnH/4I3TGtabLXMfn
xxlA3XT8R34DVYhvKJ43fm/wY2XHGmdL5OIMHu8Zry3XTGYsVjHWZrlxch/E
vKYX5E7ifeWGyA2m2djRn89N8Xtra3y/cU7AZsQ+FHs5VhF7Ue0R4+Xhqxpv
ONaDfhF7mNx2+TFxJqFX+HJ4IeyEfLk4K7ju0TgT0mK+I53LSH4Pxu/CrbEv
xp6uZlucUWONlhlNnbQ7U+v4TRJnmjiPGKcDNVNbK84LsY/G70vsSXopfoNm
J/0j43wbvxOzk/uJ+6oQ7ynOmnKP0hGZphnJ+SSTb09f8e3oAey9WA/VFlZb
WV2V2F/jrIu3jt9+sY/q/5T/PyrK9CQ=
           "]], 
          Polygon3DBox[{{2109, 927, 773, 772, 1079, 1776}, {1725, 973, 1138, 
           2178, 1581, 1582}, {1578, 1577, 2176, 1133, 1134, 2177}, {1788, 
           1093, 787, 788, 1094, 1789}}]},
         Annotation[#, "Charting`Private`Tag$3575#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0k1LVGEYh/F7mvEttZSoILA0cSPoPrGFCxFSrAZXSS3aWWArSReKq5TK
l0wrqJWgX6CiD1AQCS3ypdIcy4WLIYSsjZlRv1OLZ67rf5/7uc8z55yaqzey
vamImLUyByISf+0njwXyWkFEBU8u5Pgp+hUbcQ/PYnFhRAfWFEVU6zttX7ec
l4d4vVqdnmtqzTiAbTiKWXyIl3Eer+NzHMBX2GJGm/2d5iwl58BB+XY6Ylm8
gyt4Tu0uf89H9cxkItrVXvAPak+ddZF/5GP6VvGRnk494/KafJ5P8E98Etfx
HuZwCjfwPn7GafyCj824aF+X2ZtyGoflaedflG/hS7yJz7AH57AbH+AFHMFW
7McmPGP18Fq8hFXmHeXtvM/8SnnWcznGm9V2/bcGrC/2jNROJjX9f7BQPoz7
9lyxfsuH5F9Yjgv40yrj267v8lJ+wsy8fJAf51u8hB/hm9ytopzn+A97HCdW
+Xfu1rHCd7iWeMe/8Uzy+hTeyunkXfI3qX+vNJ64mE39/wb/AphZUNY=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1498, 1915, 1916, 1860, 917, 1929, 1770, 1861, 2355, 1685, 
       1930, 1772, 1862, 2356, 1686, 1931, 2160, 2203, 1863, 1687, 1932, 2162,
        2204, 1864, 1688, 1933, 2164, 2205, 1865, 1689, 1934, 2373, 1775, 
       1866, 2107, 2332, 1935, 1777, 1867, 2357, 1690, 1936, 1779, 1868, 2358,
        1691, 1937, 1781, 1869, 2359, 1692, 1938, 2165, 2206, 1870, 1693, 
       2017, 2194, 2207, 1694, 1499, 2195, 2208, 1695, 2018, 2388, 1783, 2068,
        2085, 1696, 1784}], 
      Line3DBox[{1501, 1769, 2108, 2330, 1500, 1771, 925, 1502, 1773, 2209, 
       1697, 1503, 2161, 2210, 1698, 1504, 2163, 2211, 1699, 1505, 2331, 1774,
        1700, 1506, 2334, 1776, 2109, 2333, 1507, 1778, 2110, 2335, 1508, 
       1780, 2212, 1701, 1509, 1782, 2213, 1702, 1510, 2166, 2214, 1703, 1511,
        2215, 1704, 1512, 2216, 1705, 1513, 2396, 2067, 1706, 2090}], 
      Line3DBox[{1515, 2111, 2271, 1514, 2112, 2272, 1516, 935, 1517, 2217, 
       1707, 1518, 2218, 1708, 1519, 2219, 1709, 1520, 2220, 2113, 2273, 1521,
        2114, 2274, 1522, 2115, 2275, 1523, 2221, 1710, 1524, 2222, 1711, 
       1525, 2223, 1712, 1526, 2390, 2019, 2020, 1713, 1527, 2336, 1785, 1871,
        1714, 1528}], 
      Line3DBox[{1530, 2116, 2276, 1529, 2117, 2277, 1531, 2118, 2278, 1532, 
       949, 1533, 2224, 1715, 1534, 2225, 1716, 1535, 2339, 1788, 1789, 2338, 
       1536, 1791, 1792, 2389, 1537, 1795, 1796, 2375, 1538, 1798, 1799, 2376,
        1539, 2340, 1801, 1802, 1540, 2341, 1804, 1805, 1541, 2343, 1808, 
       2021, 1809, 2022, 1542, 2337, 1786, 1872, 1787, 1941, 1917, 1954}], 
      Line3DBox[{1544, 2069, 2070, 2397, 1543, 2119, 2279, 1545, 2120, 2280, 
       1546, 2168, 2281, 1814, 1547, 1117, 1815, 1548, 2346, 1817, 1818, 1549,
        2329, 1764, 1790, 1765, 1902, 2365, 1550, 1793, 1873, 1794, 2367, 
       2188, 1551, 1939, 1766, 1797, 1767, 2372, 1925, 1552, 1940, 1768, 1800,
        2282, 2159, 1951, 1553, 2033, 2167, 2391, 1874, 1803, 1952, 1554, 
       2034, 2342, 1806, 1875, 1807, 1953, 1555, 2344, 1810, 1876, 1811, 1556,
        2345, 1812, 1877, 1813, 1557}], Line3DBox[CompressedData["
1:eJwV0DlOglEUBtBrYhA3wKyI2LkBKksTDRWFAyULkBoVjRbACkRrHHqNbkkS
UUmUws7zipPvTi/589c63dbJUkQ0qWci3njJRmzKV57VNTmX+2yov+UeVfWZ
/KK9ErGemJ3qPznWryVm26sRFfUR11xRMW+aX6ifuOSQXxb8pHv7srt79SMP
lBkx5W85omQ/UE8YUmDXu7F854aim1t5xwEN+55vLJj35Ywt87z+XP2R/oE+
p99xW007s2J6k/6J/h9ExiR0
       "]], 
      Line3DBox[{1573, 1824, 2228, 1719, 1960, 1827, 2229, 1720, 1963, 1829, 
       2230, 1721, 1832, 1903, 1904, 2231, 1894, 1924, 1722, 1923, 2175, 2232,
        2074, 1723, 1578, 2177, 2233, 1724, 2088, 2202, 2410, 2106, 1975, 
       2049, 972, 2052, 2050, 2051, 1976, 2382, 1725, 1582, 2234, 1726, 1584, 
       2235, 1727, 1586, 2236, 1728, 1588, 2237, 1729, 1590, 2238, 1730, 1592,
        2240, 1732, 1594}], Line3DBox[CompressedData["
1:eJwNyzlKg1EUBtBr4bQMQRJDIiIiEnegMQmkjRMuQHcgP/a6AKdecchoa+Fq
LJ0yx+QUh++79923dHJWOZ2JiDL5uYgP3hcitmRHltnU/2SJDf1XFlnXf+Qe
a/q3LLCqX8gvGvMRLZrk7IuLEW39jToZN/XZiKy3tPmYbTeJfcYuZT4ib3du
t2J3b64R5ok8pOB9LP8ZcUfabSJf2fV+6f5AHzCkT8rNk3zhmX269Oiw7P3K
vx3/H80PVLnhlms+mQK50i4t
       "]], 
      Line3DBox[{1596, 2128, 2295, 1595, 2241, 1733, 1597, 1833, 2242, 1734, 
       1889, 1905, 1906, 2243, 1895, 2005, 1735, 2004, 2191, 2244, 2075, 1736,
        1598, 2197, 2245, 1737, 2091, 2401, 1834, 1977, 2053, 2129, 2393, 
       2056, 2054, 2055, 1978, 984, 1599, 2246, 1738, 1600, 2247, 1739, 1601, 
       2248, 1740, 1602, 2249, 1741, 1603, 2250, 1742, 1604, 2251, 1743, 
       1605}], Line3DBox[{1607, 2130, 2296, 1606, 2131, 2297, 1608, 1835, 
       2252, 1744, 1890, 1907, 2179, 2253, 1896, 2007, 2008, 2006, 2192, 2254,
        2076, 1745, 1609, 2402, 2092, 1746, 2093, 2403, 1836, 1979, 2057, 
       2063, 2058, 2394, 1891, 2059, 1837, 1980, 2132, 2348, 1610, 996, 1611, 
       2255, 1747, 1612, 2256, 1748, 1613, 2257, 1749, 1614, 2258, 1750, 1615,
        2259, 1751, 1616}], 
      Line3DBox[{1618, 2133, 2298, 1617, 2134, 2299, 1619, 1838, 2135, 2349, 
       1892, 1908, 2180, 2260, 1897, 2011, 2012, 2010, 2386, 2009, 2077, 1752,
        1620, 2404, 2094, 1753, 2095, 2405, 1839, 1981, 2060, 2064, 2061, 
       2395, 1893, 2062, 1840, 1983, 2136, 2350, 1621, 2137, 2300, 1622, 1008,
        1623, 2261, 1754, 1624, 2262, 1755, 1625, 2263, 1756, 1626, 2264, 
       1757, 1627}], 
      Line3DBox[{1629, 2138, 2301, 1628, 2139, 2302, 1630, 1841, 1842, 2363, 
       1631, 1909, 2181, 2368, 1898, 1843, 2026, 1632, 2079, 2387, 2013, 2078,
        2014, 1633, 2406, 2096, 2097, 1634, 2198, 2351, 1844, 1982, 1845, 
       2065, 1359, 1986, 1985, 1846, 1984, 1847, 2352, 1635, 2140, 2303, 1636,
        2141, 2304, 1637, 1020, 1638, 2265, 1758, 1639, 2266, 1759, 1640, 
       2267, 1760, 1641}], 
      Line3DBox[{1643, 2142, 2305, 1642, 2143, 2306, 1644, 1848, 2307, 2182, 
       1645, 1910, 2183, 2369, 1899, 1849, 2027, 1646, 2081, 2193, 2398, 2080,
        2015, 1647, 2407, 2098, 2099, 1648, 2408, 2100, 1850, 1987, 1851, 
       2066, 1990, 2364, 1991, 1989, 1852, 1988, 1853, 2353, 1649, 2144, 2308,
        1650, 2145, 2309, 1651, 2146, 2310, 1652, 1032, 1653, 2268, 1761, 
       1654, 2269, 1762, 1655}], 
      Line3DBox[{1657, 2147, 2311, 1656, 2148, 2312, 1658, 1854, 2313, 2184, 
       1659, 1911, 1912, 2370, 1900, 2029, 2028, 1660, 2083, 2084, 2399, 2082,
        2016, 1661, 2199, 2314, 2101, 1662, 2409, 2102, 2103, 1992, 1997, 
       1996, 2383, 1663, 1994, 1995, 1993, 1855, 2354, 1664, 2149, 2315, 1665,
        2150, 2316, 1666, 2151, 2317, 1667, 2152, 2318, 1668, 1044, 1669, 
       2270, 1763, 1670}], 
      Line3DBox[{1684, 1859, 1177, 1683, 2328, 2158, 1682, 2327, 2157, 1681, 
       2326, 2156, 1680, 2325, 2155, 1679, 2324, 2154, 1678, 2187, 2323, 1999,
        2001, 2000, 1677, 2385, 2002, 2003, 1998, 2105, 2384, 2201, 1676, 
       2104, 2322, 2200, 1675, 2030, 2086, 2196, 2400, 2087, 1674, 2031, 2032,
        1901, 2371, 1914, 1913, 1673, 2186, 2321, 1858, 1672, 2320, 2153, 
       1671, 2185, 2319, 1856, 1857}]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzzsvQ2EYwPGnWqKbL2CQWFw+QBOLy2iziMtkq4FIdGBgQFIJFkxisbQG
iUQQiaRDF3eL1f3W0sFH8Ovwy/99z3POe85pm5gemkpExDB/DRFNjREdqYiU
dupOc8SudtHNnn0iGVFk37pFj2mlaj/inlEKZNIRY3rBODUeKbLm/EHzde0h
69oMk5w650kveWaWA3KUzV70ilfmOGSeW7M3veadBY5Y5MHsQ2/4pNe7l/SE
Zb7qz/NNn1lez1ilwh1V+uvfrOds8MM9vwyYbWqJLVb8Vzvb1v/NnDZE
       "]], Line3DBox[CompressedData["
1:eJwVzTtOAlEUgOEjYsDSDZAgtD5aN2BpgTUo+EAFcQFaqcswJDwUASMmJsYF
WFOwE8IG/G7x5b9zZubcYuOu0lmLiCOWmYj8RsRONiKnu/qSj+jqHvsMPGfW
I8ZMnLf0hy/nglZ9c+/fmj7oiRb1cDOi5FxyLuu2jvXAvKUr2vza0/OuTzX9
n3bxZz7QIac0qDM3f9U3zrigYue5jnjnkmOzK22me5mkvWbX2uKGKR/pTvO2
drjlM91pNtNHnnliwTf/nl4nNw==
       "]], 
      Line3DBox[{754, 1290, 1291, 1289, 1073, 2205, 1183, 1074, 2331, 1075, 
       771, 938, 2219, 786, 951, 2225, 799, 1120, 2346, 1332, 1406, 1405, 
       1407, 1273, 1274, 1272, 1276, 1275, 1194, 2362, 1133, 1134, 2233, 825, 
       1460, 1461, 2245, 837, 1465, 2402, 1466, 849, 1470, 2404, 1471, 861, 
       1475, 2406, 1476, 873, 1480, 2407, 1481, 885, 2314, 1485, 1486, 897, 
       2322, 1491, 1492, 909}], Line3DBox[CompressedData["
1:eJwVzD0vQ2EcxuE/joREGEwWIf0AFo2pg+FEDVIkEh0RCQY2SxdLBzV0E2N3
hjIgKQlNVFISDKo+h5fZZbhyP8/vvEyu7y3v9kREga/eiOH+iBGGSAcjppOI
GlnG3Wds0hdxytlAxKhNtYxnczbPBGPu3/aXH47875BVvWKzrOk5e84FdT7p
suO9WXvFNZf/72v7vkmdb7ilwYZe0ued72lyx6Z+oC84t3hkSnuwZX3JPrGl
Pds2FX3FvrKtv9kXqnrRLmod+8E7x/oJf8RHK+0=
       "]], 
      Line3DBox[{760, 1310, 1085, 1308, 1086, 2206, 1185, 1087, 1088, 2214, 
       777, 944, 2222, 792, 1100, 2340, 1323, 1101, 1414, 1187, 1415, 2391, 
       1102, 1327, 1103, 809, 2287, 965, 818, 2292, 976, 2236, 830, 987, 2248,
        842, 998, 2256, 854, 1009, 2261, 866, 1020, 878, 2310, 1031, 890, 
       2317, 1042, 902, 2326, 1053, 914}], 
      Line3DBox[{761, 1453, 1391, 1393, 1392, 2207, 762, 931, 2215, 778, 945, 
       2223, 793, 1104, 2341, 1311, 1105, 1312, 1188, 1416, 1106, 2342, 1330, 
       1107, 810, 2288, 966, 819, 2293, 977, 2237, 831, 988, 2249, 843, 999, 
       2257, 855, 1010, 2262, 867, 1021, 2265, 879, 1032, 891, 2318, 1043, 
       903, 2327, 1054, 915}], 
      Line3DBox[{763, 1394, 1395, 2208, 764, 932, 2216, 779, 1400, 2390, 1401,
        1402, 1108, 2343, 1217, 1244, 1243, 1189, 1109, 2344, 1331, 1110, 811,
        967, 2226, 820, 2294, 978, 2238, 832, 989, 2250, 844, 1000, 2258, 856,
        1011, 2263, 868, 1022, 2266, 880, 1033, 2268, 892, 1044, 904, 2328, 
       1055, 916}], 
      Line3DBox[{765, 1397, 1398, 1396, 2388, 1089, 1439, 1437, 2396, 1438, 
       780, 1090, 2336, 1091, 1186, 1092, 2337, 1218, 1240, 1239, 1190, 1111, 
       2345, 1112, 812, 968, 2227, 821, 979, 2239, 2240, 833, 990, 2251, 845, 
       1001, 2259, 857, 1012, 2264, 869, 1023, 2267, 881, 1034, 2269, 893, 
       1045, 2270, 905, 1177, 1178, 1179}], 
      Line3DBox[{906, 1046, 1169, 2319, 894, 1035, 2311, 882, 1024, 2305, 870,
        1013, 2301, 858, 1002, 2298, 846, 991, 2296, 834, 980, 2295, 822, 
       2228, 969, 1334, 1336, 1335, 2377, 813, 960, 1234, 1221, 2366, 1125, 
       802, 954, 2397, 1440, 794, 946, 2276, 781, 933, 2271, 766, 924, 2330, 
       1061, 749, 917, 1277, 1279, 1278, 1180}], 
      Line3DBox[{907, 1047, 2320, 895, 1036, 2312, 883, 1025, 2306, 871, 1014,
        2302, 859, 1003, 2299, 847, 992, 2297, 835, 2241, 981, 823, 2229, 970,
        1337, 548, 1966, 549, 404, 1222, 1126, 2283, 803, 955, 2279, 795, 947,
        2277, 782, 934, 2272, 767, 925, 1062, 750, 2355, 918, 1281, 460, 
       1280}], Line3DBox[{908, 1048, 1214, 1170, 2321, 896, 1037, 1211, 1164, 
       2313, 884, 1026, 1208, 1159, 2307, 872, 1015, 1205, 2363, 1154, 860, 
       1004, 2349, 1202, 1149, 848, 2252, 993, 1199, 1144, 836, 2242, 982, 
       1196, 1139, 824, 2230, 971, 1136, 1128, 1263, 2378, 1338, 1236, 1235, 
       1223, 1127, 2284, 804, 956, 2280, 796, 948, 2278, 783, 935, 768, 2209, 
       926, 1064, 751, 2356, 919, 1283, 1063, 1285, 1282}], 
      Line3DBox[CompressedData["
1:eJwV0EsrRGEAxvGXMcWCkI2iULO1tNC4xDTkNgy5zMjCjoXZWeMDjPtd+QCk
lCI1RbYWNlizHysLS7+z+Pd/3vd5zul02pcL2bWKEMIKirEQmqtCuIiHkMCT
nOdFTNWEkOMtmzr35/IZSvIczyNjM8vrNjH3p/IJHuVpTupnOItVmz8cy0e4
t8nwJCawpCvjUM577oDvbEZ5DCPRe/Tf2JdzNnt8azPEw0hH6D+xoN913sGN
zSCnMIBu/Su25SKu9H3cj3HP9XKn/hmb8gYKNj9IRt9jU5YT+hLe5Bd8oEf3
zm3uH9DhnHZukq/xVR1CnC/RquvS/Vb6b84tzvXe34gG1OIfXbAypA==
       "]], 
      Line3DBox[{911, 1050, 1175, 2323, 899, 1039, 2354, 1168, 887, 1028, 
       2353, 1163, 875, 1017, 2352, 1158, 863, 1006, 2350, 1153, 851, 995, 
       2348, 1148, 839, 984, 1143, 827, 2382, 973, 1138, 2289, 815, 962, 2347,
        1122, 806, 958, 1233, 1220, 2367, 1242, 1241, 801, 953, 1399, 2389, 
       1097, 789, 941, 2274, 774, 928, 2335, 1080, 757, 2357, 921, 1300, 1302,
        1301, 1299}], 
      Line3DBox[{912, 1051, 2324, 900, 1040, 2315, 888, 1029, 2308, 876, 1018,
        2303, 864, 1007, 2300, 852, 996, 840, 2246, 985, 828, 2234, 974, 2290,
        816, 963, 1123, 2285, 807, 1266, 1265, 1264, 2372, 1057, 1271, 1321, 
       1320, 1319, 1318, 2375, 1098, 790, 942, 2275, 775, 2212, 929, 1082, 
       758, 2358, 922, 1304, 1081, 1305, 1303}], 
      Line3DBox[{913, 1052, 2325, 901, 1041, 2316, 889, 1030, 2309, 877, 1019,
        2304, 865, 1008, 853, 2255, 997, 841, 2247, 986, 829, 2235, 975, 2291,
        817, 964, 1124, 2286, 808, 959, 1326, 1058, 2282, 1328, 1329, 1325, 
       1324, 1322, 2376, 1099, 791, 2221, 943, 776, 2213, 930, 1084, 759, 
       2359, 923, 1307, 1083, 1309, 1306}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
L66N5SJPCvmmYbWwfA3PdSBKTllK6GKQ8mV7q8BYISrvm9q5e+QSauu+lPxZ
CYOP8jQHRs2L0dZ9gem4mgewsJllfbcfqf7PmHey7s9D9rs0VXk2h8LxgLCD
b0nXG+otvsh4ZT6KfvpyMJs2HLJozibGWGJgNbFD8bBsARKZpQsXSNaFO07m
j8k87c96cf/jfqOMILEO1YVDwdXrEu9MMEjcddhGq7sAPVBl505c7w8DHCtR
kFwPmNAFlUs9G5iz/X00K1/QhYVCoCG6LOGCAfOLLKY+9fzf39+u+L/r0TVS
0KmjIevUvSDr1BWTdeqWkfkzMhd+NcOV1XTHszOMkUtNREiDGwbXWLnOeZjk
I7qVOf2+7D5IorpMVdiC1M6t/KcZ8AVIoKFKEueZiGKul6o17cSAadJU+FJk
Kbp2RJZ5a4cbUqyednsojwFf8miHSWIx0jjNs2HNrZ+6nlS3Lt1+s+sS4Zf5
hzOad2HhLk8wLv9YtLIAAz+BsAM23HjUde765k47F0jxOi5z/DUGTg82HpDw
z0J+olkZqr22oB1092BxJAZBQ7L0rXtyKdp3/fN7zlR55PecKfEtnyJUM2P+
GKeGshbEDH4bpMiPrtd98yz+j/lPlsJbCUtZRijyuc6Les+qZ+afdVT+j/K/
yg+/6r7Pn3f+vL/jvL+qPr+qnr/7umLLZ3Q2JM6HM+ql5uCtYsnfj1PQqWu9
91Xieaw9LByjOa28gwhjednyEsfq0NpH5lEcF+2gxPyZFY8aEfIWqjeLL6lF
LIud7NK324JVyTLbx95E+CaebOs8VI0Is/TlqMn6ciZfR/YkDQYA9vyKbUUS
BtYBdyxOW2f/9vE0kawX94WsFydD1ouba39OqX+ea75GqX+et/PfYadOwerA
oDQONheOsZ2+jAHdcflLgQVFFO3HkfXfPpP137aS9d++lpzM6S13AMuwlyPS
XvkwfK0rSt8VQ2wTRdE7DW5B3YIWS50SUnw+uP29yJ5MNMgVbPw5VBeO7lH7
UPcKA1f6RwuINVnom4OxxLFQA7jO7bqRNxSDq/VarS6VuWjJLH3jf8SNlK73
P43TJ8z4rYLst2t/1s37P/x8dAIKglKugoP5PcunUr2QT1AS7u7vR3L4Z6Ys
3Tfgk1CitHxzD/AelldOk6KcL3wemVm34iKvW/mQ161CyPdxMdW7H/Vh+xf1
ocRzah91SYxEQ9rIEYmNdEQIslvHktxXh4LuvS5mZAyGsrTLoUIanXDKcHJr
cf0QRTvnfxzxGdLfD9b0mf/gv2q8m+f/O06p3/ir5v0ojXfrjUQ4rJY8RRIh
kv1siAhMdrK3NjjXIk29LsW7u+qQfeIiOvqWVlBalCWw0nEIXSKWmBen4tEt
LlUJGZcRuOr+ucdjpAXx/7iunIyD349ZdD/bIaXxlI2se8b54/+mMprIumdc
f9ZDo6r/X/JDNlpaa0eNYQe3bLHFiz7od49jt3DtQxLXBo+c4z4Nawt0Ri9I
vAF4V//xwhYMrVXf0PDGXgdaerJUWWq7IKWpb21Z+yBanTsTX2XZ1g0GFufh
P/nMxFeloaJhealGUMMU/MWrqR/OsB3BB17oRcdfkHXVntAXZL8twB+/O1Pe
N8LRNOWeIeg1UfEyVQ2AtENEdKRQD8X9IE4vvCMmNHAKPvKfNLiNq4LFk/wb
aXKJ6PsexLEMXJkLqSz+9D3Iq+6PoU3XDcBoom/Z1PkhuMiSuTubvwu9F2uz
aO49CSYJZ5UGHtbABllin7ohERXRENwFzfTh4jV/x8GRIVi0EacRf6ITffw0
oz8WRNYfsybrj2mRdclyyfwymdsKn5BaFqEHosy3Vcp1h6HgnqbYoEnHz32H
987ad/jzCtFRbe8TMFYRn9m+tB7SvdL4ttETUdqu40fuHr0BzA30Xx3kB8D4
9luea3k9KIqsS4bIumTxZF0yBpIfBhi5Mumppv9k/za5vAC5fDO5vGOr4Q89
NDH2WBOl+Cp8aeFM+YR7Pdal2jqQditk5OuhEdhy8vTO51RtKNxh2zRnxHHY
csq/PzesgTRuX0qMzySg5HQDpnEldRizFXRXMx+Ed3RLE/mUuhESOPzje5Nn
7Lm9uqnV+GncjH2RY2M+r1i1QXF3g6VD8AhkiyN1tWetKI+sSxZLnv/UI89/
Bm14/6Oeumxt5+yhBr/QbMaOwqHxl2Jtt6B8nD34bt8IjAjRBsqatSAz8nzm
NHme05A8nymwoGaqVvkYLJNbyrHVsgkk3U8JLlckoNUkv51dxpW5hioi5//9
PY7nCqvzo4txcHYi/5q1OgaF/cIi7qqU4xmEiyeoL0tFd114F+O/EqE/JG7f
46XlFOfzKfG59p+1Nj2xkmIRQGf5XiLuNgaEDUYbFfYXokqyzlUwWeeqhKxz
1UHm/mQ+TeZhs/Svmsn6V8KcDNteWERAwzslTl5dUnzl0s648kEhxf0vtDkN
BY4vigSZihV5NVIYTMmp8Fdml6CV4qFjJlMP4VYDnucdjgiH2K6rFEtXz30e
bFN/jhQ+FIhiWTGN6l0wuPQsqxnvEEU+V/s7zjLzfD4egiQjIrj8RDDAO6Yv
Cp8u/e1561z5XNsJpfrPdVyetz9v/+9on1J/O9d57Hk7/x47j+9KpJqfugrl
7eqvP28fhhDa18Tpvg50LnCdZUa4HvizGoWeHCPAEo4NFxPt6lGUXX2q9WNN
eLSipeecGgFoM4mhFqeb0IEhZY112irgwsmbF9feCWNX+x5/dSWNs1QuaWdt
bsOARbutwH0i1MZ716cMVKPVPLvePMy5AXxEYeorhQTYgzZnGWs3oIITAaf9
pY+AUeLniC6hVhAPyNd9mTaCqJbQXvjEfgWELuw5dbViGLiLVhXTx7UjMeYM
ou5EOHg2NSaNmZDGESdv+qtdBUg7NO2tn6QXbKZOh2PpGJRdkNh56FYW0m1e
nAVX/CDyAPvHsy8wONC14LnKcBbqeKavzi4bCGPSdIYrEzFoc2GqTC/LRjnF
y3jSpO1RvGDaLZwTBt3Swvd21eQj5yVU/ZrOMYhuH/SfP4GBRz125fiWEsRP
1hfSI+sL9ZH1hZaQuQGZN5P5JFl36C5Zd6iErDv0q567ubYTSuPdzu+/ZGVn
HPt+lPwj36f6v/5Q5sF61/1M1P7of1ZTSxrhVAlz5haz6llNricl/qv6t3n+
z7m4o5dH2jMLOL18Wf4SbQz2HLjn1cpRhIgdOj7ju13AZHLsZfQrDLbs1lV8
VpSFlpke5lt33BSWi/pVGchhsLRa36u4qhi5Jzq0vyOQ4uFnCqUKSaTn15Tf
PeZk9i/rD/9by/OEnD560PAomMnEGLJmNINq5tmkBasIc7bzq57TX7VOTSlu
mWt95s87f97fcV5Kz9FfVZ+58oqoiPTac64Q9bDJI6JjCCZrL9jglDtR4fn9
i+9Fm4K4VpbclxVE0N7PtNO7qw7dWL7uScO9QHDcfXZMmBTXpQToZu9tqkb7
fWlXJ596AOOZW64maBNBNi7mnV9GDbqYpMiuZeEPrLwb+4UqiEB30b3sg3gV
ChcyS1N97QsSL562Xv1KhGAB4eM9mRVIx7lgT0q5NxzbF347hBODN0k3ittc
3qCLiVtcDl72gt4zxD0HxDCIT7K1YasoRSr5POXRqvegyPLRsmdnMBiKfbRF
TL4EEe4uPfLK2BNiVe8Jr72MAa/Sfg2mNcXotfBFebUKD3APPbZ6oz4GrX1S
HTavC5Fy7DnhXhl32EkfRfC3wsA9yMDtnE0BeoFzNrwy6Qqn9OXCP7lh4H2/
7eyd6/nIZTp1y1K8C0zjlftj/TFQCS8klKjnoWW61o8bw5zh07eMkNFwDOSK
Ne1azXPR7lBZD9MAJzg1cbSJIRaDvtE7gRUPc5DnwGfs8P0IwLc8f8NNGgc9
C7hUFByK0cuPgpcts3Gw8JpSbQ7pepPWvO/msixFtlp8XVGrw+GcNc9JetI4
G8hQnnq4uhDdXd77xelwKPCeGxF6a0kaT61vWq2XK0AMyh+yBa38gWDI8fo+
qf6OcaIsD2TykezAy11sF33B5pnDwBVvDI69fxC1qSIPTfInQaPPfZhYqBoR
6YvB8/dJfZKOeahaM0zCJSkAvhw0vRBH4k+5LLhs9fKQDv87psbP/jC+zzI8
/gEGkx9pCI65uaiBFpY5nvOHrRuuW43iMNDMNHVx5s5F4dMqHrwv/CCet73V
JwaDm5VrJD7ey0Ev9q055c/lB9pCAdcTEjAoVOBlubsoBzEbyYQUBvjCsjba
zFPPMGh2eRa1yC4bddrXa3at9oUnXriz9qkY7B0lNAfTZqMM+pbCrUE+sO2+
LO3lNAyOWvKJ6gdkoYQ3HTTJAzgYdhLYqhNAqg8v9Yhjdy6Su3LbXUsjErI2
bTvY4oVBCxbXXmGdh0zW0YVuN8EByuoSWh+KgRmDmLWtXC56vuQp5K/AQTR9
PfWySAzux+BOiDfnoFTFW2dvw30o9dp/cHs0BmpMyU9fT+Qg2lFiB7eCOyzG
WR7yDMJAwF06fpg1D51v3BwXm2gLjWsjLIPsMSBm+znvZytAI9XC3fknwoFD
RWHVmwsYGHjw6PTFFiPjWfqur8j6ru9n6fB3k3X4N8zS1V9P1tUfJu/jIEve
x2ENeR+HR+T9xXzI+4sZkfcXW/qjt7DPoP9xbM2Y6T1I8Z7U+3gR+1AY2CRC
z0jy/6KgqUGFjixU3UBNc6IiBLI51x59QvK/yNMp22m5LLRrrFeYUTEMbn0w
P6P0FINIzoUfLG2zkY9odWmPUjhkKdCi7aTnwuqwoy3r0Rw0SZ3Ec/7mVnBM
XjoxSvK/1/FI81Z8LlJ//kSUf78H+hIj7suvgUF93EJUZ1SE9KkGasrlo9FE
tylVcRERcp9d79U+XoVcF1fFHJyOgOyF71tTTw6D57306LHHHehzgNw23jNO
sIbp6sHt1NWwNrR8RfBzImrcnOIYd8wVll5deGTLgypo0RHgEc0l/mXzkFfV
pX2LhZ0gu7KqLTYfA1mz3ApGZTyiPzTZtbTFBcT177xe8RyDDSGAbz2TjTg7
eZ8linrAVXeWLsNADOIOc12/sDsP1QetHvt4uBWZ2h37wujWA2IJx89MM/ag
uEMfzHZyN6IVKQOwPK4L3ImJm8/S9KOVf9Yro3r+5/3i/+1++LvwsD/r5VL5
k/VyZ+3fRPWP/Zso8Xn//3dwSvf3P62ev5vP+2GGz/vhn/O59p/z/eQ/5/P+
/LV83p+/ls/7c4affFzORMXlCNctC+/KcI1AlbWcqoNFGzIPcqm+q2wPD3Zy
Jk6kjUBogJDbUsFWhLsawczpbAtdH/SLS3YR4ENdO6slfzP6WimnRM1nAyHZ
pdv3eBOAa/vXGtc7jUigK+rC0a9WUPvqOD1/GwFynIVh4UQ9ukzWBXIk6wLZ
kHWBsNXL3tjuMAdNdwGWO7ZE2G/jNh51qgY9XlI99TLDFLSUB2E4jgjRj2y3
fjtZjb50xupxGdyB8ible+OlROivTp1yuVKFVkQue7z4sAmUPdOdXjRIBEaN
5Ddn7lUijdelT6gEjUH73mnCvgUYnNYSaxkNrkD6Z0LkHgsawRXFG5NGuzAQ
Or+LSciiDGkO6pllCvvBleqOx7LLSHlNEHvUDShHXxx63G9fug8fOKWsTwli
wOAjwthgVoamix1Tl7d5wYmr0rnTxzEoS9gjVwQlSJYR/6hivyfQKjKctVXB
wES7TrL5RDE6O0tfKI+sL/Q+PliRjtcNxq4s+vLKDwP0tnvxRvM8ZCr0JT6x
ywVSzdn3PAsn5V/CKOiRdS5a8yAot63EGcaVOyV0QjA4J9K/4H1dLnrs4m1j
BU4wZZtoTf0QA5bnizv9JnKQS/Lh/oAnjuA/tMHo9gsMJMtvRi5Zlo2ShXJW
5VQGAD/Nhuf89hjk5sYHiE7mI15uDWz7B1/40p++hd0dg8TOLY1sJ/PRg8cs
VL7MPtBmzilxwQuDTqqjmBQhD3FR0Pm5+TZ27Xs1P0jojX9ZGoeB2FpPevtz
OUjSOeuIVa0v7HXh3YVPxGBrnsXli6XZaNVRPd4dGT6QtqDdRCUdA3ZXHgND
hSwUGOZxU4fXB151RAQqAAa+57/5bM8ExMYcvLew+h74uxor7Q7CILVRs373
hjw0LqBhszTJHm6p+abdd8DAzHmlucCCgr/sucPN6n98yf2P2az+5wa5/2GZ
1f+k/Jf0P3Pl1/Yd9Mlp/sNvsU+WVmhKDaDHYluQRdwffmtvpG3rlhlGjyG8
za7oD7+tYh2v2LL87+M3f7F7fM83/9xnmUrp01Ru0KJhJKd23eio/c99D6l2
T15/zNcz8pfVs5VF7qlDxB/19H9hR2BLHUIi9yL3DUn81KWnMuV7dXjBy7+u
nn8VX+Nutzb+QBK6MshpvvwdAThaXRrrRerRxbV5tQ/KE1F4+GjYmmECKBAl
2wMv16O9vgUxp8VDoa9A516nTQdYpPQxf1Wfe77m62wkz5IYDKrpkjzKDkTw
3BLh9HlrDToyLlg5NeYEGzbJCxhEDUO2dMKmxA0dCAkJ0D8WDwS3iHWsW4uJ
8NyEOipIvQr5uQ41RA87AA2j0Mf3ciOwF2HFB1LeooIXfeY5Av4Q+/Xgautp
Iojk0YopNVSgglk6DF5kHYaLZB0Gd7IOgx5Zh6EjrXarz+F7MDoa6x51A4OU
q7hPr62KEBsPx4GSi5Yg+mbPNqZdRDhm//BwIn8dyinhzrBh8oRyXOwaJmMM
+BUnS86dKURP6NKd1Lwt4Pmdwk3j6kQ43bbixMkvNahsn39EoIYHPOmguRZA
Gtc+LLslA8sKEJdB88TyaTNYl+VnXeRNhNVnLPZmD1UjRRU96e5hN7h1Cac9
RhrX2jZO2RoQ81Bv7IwegiRZD0GbrIeQGa1/oGKTEagUjxJp12Ow3q4uwnXq
Dbq7lq5W/ShpnFpNvzsej4Hg23Tx+/2A6H7cH9cMmh/Hzp/z26t+HIMymH8c
R35yhqSnSq8iXOGZtpQjsxtpnD3Js6TdPB+tosALlkyw2dxLQtXsC1pa2gkg
ob/O7pBnPcqOKNOlzwmH1hVP9DNNMcjskv6wNaPg/+AZZJ43YLRrb0k0bCCo
p/szDoDywpcqb5b3ovCYG0fZeh4CrqU0JNF1EG7FiQr4iXYjBb8u2tqtEZCh
4dM5aIhB+zQrwyRXIUWurzxRIvjCGeI5EjpoqqugJoqx/kY6EfHziWhtvx0B
/sKJLDW6GAzbu4VoeBSiHRQ4m3yky7Fl7mB3+gZ3lGIVfEtu/nK8jIjEZr3P
HE5+n3k2D/sXug3qG7jMqJfjgHXn+cRCNQxO4JqZx7WLKPK5PqfcYsm7yq7i
wOXs4crCSxjsJQj1W/UUIa5ZfA+Zz9X+XLn3urHhci4j2OjaxP2VFKftKPWT
K7XIQc9ad1/L1LiLDIt7CjRJcdTnlEyIpStAEcvMqYbqmtAgTuiEX3M3NG1g
xe+y70XfDPc5b1YORPaqsf6YCAZsE7kTaxaXoZclAV+zpYLRo/XDbcVbMVBl
X268arxs9j4mVP/Yx+RXXRehlvHmrXFHiJiSXRxVjMEx/aBrsdKZFMvrZ6x9
vXGlAzxMXns7qorUzzB3rYMV6QjXN6yXa+UEqxoCXzVmYbCyoIBtWQBQtFPk
ZXXR+ZArQAPLmFQCBqfKuKa/7cihWP7RrHimixzPRM2KZ1b/L+MZtVnr/lr/
4r33/msn6lKKf+7/QjU4mmz9wHru5618qnXXe8sfdlR8lhhvifx18ZjvrPfx
XpPfx6Nu+9M+SlT/2Edp8s/7K1Gt+/N+rP+f66NvMoyx0v5Rnwnh2Eqp3f3I
lGqzRv/GP/zw6mxiv20UAWV4Ph1cN/ZzHzEqvd1G9tTtf594lRLXZFP6Grbf
BZz4Q9kfrh6GM/l+vFvoO1Gblfgq0cVOMOB8ua62fxhE8HsuWZ1tR0JKle3D
HA7w+CzHI1/3ETAI2bZrcX8r4gjoXOEiaAeCX/1Yvi4jgI7ng6cNpc2Iv43t
dWaGDRg1+Iq/NCTAer2WNgOqJpR64ZD6fgtrmL5xQX5jIQE6mEXuWmg3oHqR
owX3Sy1hZJKzopCOCOrSo9phtPXoeVr4eUe3u2C++/bZ6UNEsLA0qdAprEXs
KweGNraagw8TE9uEIREunwjW4cPVoO3r3/W6KphBSo9zjWEYETLMZZg2BFaj
8NIW/itf7kBK1cX2jmwirE97zasUW4UYy6jf5e/1gTN9iYoLSXmrU835l7zV
QHG9e7l70ZtDix9Cml8427upfnim7P64ZHPvb79fgWPMe5Oj49HLzjBFFVI8
4HKqT/wZY8Hs/cio2H7x8/LL6j+rH/jH/p5yf943jSqPvG/a7x53flX9/y68
6UnMjWOPLqOUhuFDA9ojwJBhWl5x+S3F66X0HjWl8p0PCvS67v7RfzZHKjff
8vrr2uH37w2pshbu/5+W3xP65/r7kOuf/EQqcnqVK6z+DMPii4aB+YIwLy0p
/8+54rKmWs4Fth7M7/ooMQzXhk0v8RV2UMwXnP68HyVVCnk/ysRZPOHP+3v+
f/YDpXl1v1n3N+1f3N+8fGU+2nWdaMP3X62nMgbafVYp0w+jAjLf/KPc5598
/azvoxvJ30f7hCbUbGVxBqfihJVT9sPA+XYw1uhcB9p0TfddwVJHeKX0cnIL
GgF5Nb1urhVtKOhLh8SolD0g7tzBO1Uj4LbLQ96gsgWNJWvk1uraguU70QVh
hwnQlY7zu9XWhIoc1W8/ZrEBXN2HqoURBDg56rLQXaAReXEl0Pg0WoHCKstr
3kMEWJhl+2j7i3rUFRS+St3YElZq3izl3EoEoVVvZN9fr0O0kxr6BU8swCne
rsdOhQjV1HxLrwjUomuL7KPimM3hIsuTl+6uRODjK194kLUGXW67WrMgxhSe
7pnObkoi5bkPcz6eZK+e87wBpfaT5XB2tRt7GloyuiHPvZc03gW3vFZ8W45K
yZyGzG+SuXUMlult8RSFUaXxGqlicG0r25G3Y4XIYBZXIfO5tqu5cpVZ84RP
yPOEv8o+Jb/9o91y//j9j/apsdZpp67hH/N1Rlb+W971jyCdWdyQzG9S4Am/
+fn9q/isfXWp/rGv7u+ON7SNK47Gwh/rAO1qa7b438VQzqw4XJcch8+1Pn9V
+b8qTvtV51U2+fN9qSPfl999Xkr82qzn7jX5uUui8Dz+7vpwzGq33WT/5FFo
t5TG5dsU8lNK5XNmPad3yc/p61ncnsy5Z32PQyB/j0PJvums+oyS66M8qz9/
Su7PlWbF89nkeP78LF5A5nWz1imCyesUnrPWWS6T11kI9Dt0FivfgatQJBpf
RYRjuFf7B/ZWIdPjn8OCOYyhjVr/tDcNBs+2vcm2vFiBqB6YTh1s9oH1B3ny
Il9jwLCy6rapbhZSyh9esrLUB0RZ1bZQp2OQhD+ho6SWRXHej9L4kj9rXFYj
j7+s5Phn/fdi1p9+6sxQaj+Rs/zvQ/a/GoX1NUr3l1J7iJ41f9VNnr9SmmU/
iWzfbNZ9x8j3nVL9KXG6P+9TTPWPfYppKPClFPhcz/tX8R96RFmM/+O8Y/90
cTKi+cPPNQtt3k2J9KM9s3gTmX/6zfNjmb95votS/0ypP6dkJ5dCv0qpH6Zk
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
33dpqhN9rzTlqb6o8US6pvxVovf+AT5oTAI=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 4}, {0, 1}, {0., 2.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.733837993966469*^9, 3.733838028683222*^9}, 
   3.733839036982925*^9, 3.733839573725169*^9, 3.73384551878384*^9, 
   3.7340940083244*^9, 3.73409494095934*^9, {3.734095024692771*^9, 
   3.734095051946539*^9}, 3.734170942463348*^9, {3.73417113427625*^9, 
   3.734171143236252*^9}, 3.73417303859725*^9, 3.734178300650264*^9, 
   3.7350573593193607`*^9, 3.7350573943717422`*^9, 3.735900244586781*^9, 
   3.736599287504353*^9, 3.736686666416696*^9, 3.742823688152336*^9, 
   3.743082354002634*^9, 3.743931501884242*^9, 3.7491509890411744`*^9},
 CellLabel->"Out[16]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
eNNz/Kf/2f8DurRxig==\
\>"],ExpressionUUID->"6df0debf-c4bf-48bf-a787-af83bbf96f54"]
}, Open  ]],

Cell["Now, we pick some concrete values with units", "Text",
 CellChangeTimes->{{3.742823738468861*^9, 
  3.742823748723401*^9}},ExpressionUUID->"2246f6b9-028d-4bed-8f21-\
e1b0ad35e6d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"checkvalues", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", 
     RowBox[{"2.7", "*", "Hz"}]}], ",", " ", 
    RowBox[{"P0", "\[Rule]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"10", "^", "13"}], "*", 
       RowBox[{"W", "/", 
        RowBox[{"(", 
         RowBox[{"4", "Pi"}], ")"}]}]}], ")"}]}], ",", " ", 
    RowBox[{"i", "\[Rule]", " ", 
     RowBox[{"8", "*", 
      RowBox[{"10", "^", "8"}], "*", "Hz"}]}], ",", " ", 
    RowBox[{"s", "\[Rule]", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"17", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "26"}]}], " ", 
        RowBox[{
         RowBox[{"W", "/", 
          RowBox[{"m", "^", "2"}]}], "/", "Hz"}], "*", "2.7", " ", "Hz"}], 
       ")"}]}]}], ",", 
    RowBox[{"dmax", "\[Rule]", 
     RowBox[{"3.0841981", "*", " ", 
      RowBox[{"10", "^", "20"}], " ", "m"}]}], ",", " ", 
    RowBox[{"tmax", "\[Rule]", " ", 
     RowBox[{"2", "*", 
      RowBox[{"10", "^", "7"}], " ", "Hz"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.736600260985235*^9, 3.7366003572035723`*^9}, {
  3.742824195593754*^9, 3.742824196563457*^9}, {3.742824280441959*^9, 
  3.7428243036418753`*^9}, {3.742824391128985*^9, 3.742824411386286*^9}, {
  3.7428244505096817`*^9, 3.7428244684725323`*^9}, {3.7430840845715837`*^9, 
  3.7430840859431343`*^9}, {3.743084658587392*^9, 3.743084660903541*^9}, {
  3.743931466117631*^9, 3.743931468000358*^9}, {3.749150968734804*^9, 
  3.749150969405255*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"3da7558c-454a-4872-9620-3f2750aacee4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"c", "\[Rule]", 
    RowBox[{"2.7`", " ", "Hz"}]}], ",", 
   RowBox[{"P0", "\[Rule]", 
    FractionBox[
     RowBox[{"2500000000000", " ", "W"}], "\[Pi]"]}], ",", 
   RowBox[{"i", "\[Rule]", 
    RowBox[{"800000000", " ", "Hz"}]}], ",", 
   RowBox[{"s", "\[Rule]", 
    FractionBox[
     RowBox[{"2.1786492374727666`*^24", " ", 
      SuperscriptBox["m", "2"]}], "W"]}], ",", 
   RowBox[{"dmax", "\[Rule]", 
    RowBox[{"3.0841981`*^20", " ", "m"}]}], ",", 
   RowBox[{"tmax", "\[Rule]", 
    RowBox[{"20000000", " ", "Hz"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7366003575713053`*^9, 3.736686669870737*^9, 3.742823754413013*^9, 
   3.742824417764277*^9, 3.7428244706635103`*^9, 3.7430823552316732`*^9, 
   3.743084087544779*^9, 3.743084662660606*^9, 3.7439315102351227`*^9, {
   3.749150972447792*^9, 3.7491509893601093`*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"623a7175-62bc-4b1f-a4cf-678b862f52dd"]
}, Open  ]],

Cell["\<\
\[LineSeparator]This is the curved portion down to d=0 in the 2D flot

We have to consider six regions: \[OpenCurlyDoubleQuote]near\
\[CloseCurlyDoubleQuote] in the regime where we saturate our search space, \
and \[OpenCurlyDoubleQuote]far\[CloseCurlyDoubleQuote] where we are \
sensitivity-limited, for the unresolved, resolved, and broad regions.

Region I: Unresolved close (A12)
Region II: Unresolved far (A11)
Region III: Resolved close (A22)
Region IV: Resolved far (A21)
Region V: Broad close (A32)
Region VI: Broad far (A31)\
\>", "Text",
 CellChangeTimes->{{3.733845483671124*^9, 3.733845534644127*^9}, {
   3.733845650834235*^9, 3.73384569914501*^9}, 3.733845888905963*^9, {
   3.733846258940291*^9, 3.7338462940159187`*^9}, {3.734171172348044*^9, 
   3.7341711820544033`*^9}, {3.734173443878146*^9, 3.7341734758992968`*^9}, {
   3.735902036953208*^9, 3.7359021030239153`*^9}, {3.735902147004532*^9, 
   3.735902441729982*^9}, {3.7359064357221527`*^9, 3.735906442829709*^9}, {
   3.736006732848281*^9, 3.736006885418919*^9}, {3.742823769012165*^9, 
   3.742823811598535*^9}, {3.7428238869855957`*^9, 3.7428238882320843`*^9}, 
   3.7491509750155125`*^9},ExpressionUUID->"719b1f9b-ce69-48bd-96fc-\
bf84a88e0c91"],

Cell["\<\
The upper and lower boundaries here are indicated notionally as comments.  We \
only integrate in distance and transmission out to the haystack boundaries \
and critical distance.  The Min and Max functions (which are actually \
implemented in the Python script) ensure positivity of the integrals and that \
the haystack boundaries are respected.  
\[LineSeparator]Here, we calculate the general case of the integral, without \
making the limits explicit.\
\>", "Text",
 CellChangeTimes->{{3.742823822590735*^9, 
  3.7428239350484333`*^9}},ExpressionUUID->"0ade3a1b-089b-41f9-9bd9-\
b2cf437be4d4"],

Cell["Region I", "Text",
 CellChangeTimes->{{3.7428239587512417`*^9, 
  3.742823959598995*^9}},ExpressionUUID->"6869ea14-d759-44b2-a8bd-\
ce6ee1b61b98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"dIUpper", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{"dcrit", "[", "c", "]"}], ",", "dmax"}], "]"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"tIUpper", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{"c", ",", "tmax"}], "]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"VunresolvedClose", " ", "=", 
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"dIUpper", ">", "0"}], " ", "&&", " ", 
       RowBox[{"c", " ", "\[GreaterEqual]", "tIUpper", " ", ">", "0"}]}], ",", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"d", "^", "2"}], 
         RowBox[{"ymaxnu", "[", 
          RowBox[{"d", ",", "t"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "0", ",", "dIUpper"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tIUpper"}], "}"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.733830761754548*^9, 3.733830776949513*^9}, {
  3.733830812356271*^9, 3.733830867452248*^9}, {3.733831148093857*^9, 
  3.733831154106493*^9}, {3.733831506818143*^9, 3.733831510065886*^9}, {
  3.733846309288933*^9, 3.733846326262854*^9}, {3.734095493052004*^9, 
  3.734095493626726*^9}, {3.7341736155467463`*^9, 3.734173654013165*^9}, {
  3.734174906588182*^9, 3.734174912275305*^9}, {3.734175175415289*^9, 
  3.734175195249072*^9}, {3.7341752740721493`*^9, 3.734175278468916*^9}, {
  3.734178317084485*^9, 3.734178319219468*^9}, {3.7341787448571377`*^9, 
  3.7341788658515244`*^9}, {3.73417889690833*^9, 3.734178930719589*^9}, {
  3.735906187387761*^9, 3.735906208941309*^9}, {3.7360068907394247`*^9, 
  3.7360070908743*^9}, {3.736007182936513*^9, 3.736007183692075*^9}, {
  3.736007287801147*^9, 3.736007291967329*^9}, {3.736167279436735*^9, 
  3.7361672869386187`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"bdcc455e-335a-48eb-8366-2c3b8afa5fc1"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["dIUpper", "5"], " ", "tIUpper", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "14"}], " ", "i", " ", "P0", " ", "s"}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["dIUpper", "2"], " ", "tIUpper"}], "-", 
      RowBox[{"7", " ", "P0", " ", "s", " ", "tIUpper"}]}], ")"}]}], 
   RowBox[{"70", " ", 
    SuperscriptBox["P0", "2"], " ", "s"}]]}]], "Output",
 CellChangeTimes->{
  3.734178901390627*^9, 3.7341789353313*^9, 3.73505740056312*^9, 
   3.735900251646202*^9, 3.735906213061474*^9, {3.736007017964847*^9, 
   3.7360070319967117`*^9}, {3.736007068799284*^9, 3.736007092640648*^9}, 
   3.7361674949670773`*^9, 3.73659929153379*^9, 3.736686674614732*^9, 
   3.74282394117782*^9, 3.74308236060793*^9, 3.743931514348206*^9, {
   3.749150979869221*^9, 3.7491509902259398`*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"c5294b79-695c-4f2c-81ca-96bfa45b6a95"]
}, Open  ]],

Cell["Region II", "Text",
 CellChangeTimes->{{3.7360071171498938`*^9, 
  3.7360071179831333`*^9}},ExpressionUUID->"03245938-3d91-413f-9606-\
6582b3cb94c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"tIIUpper", " ", "=", " ", "tIUpper"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"dIIUpper", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"dmax", ",", 
      RowBox[{"dcrit", "[", "c", "]"}]}], "]"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"VunresolvedFar", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Assuming", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"dIIUpper", " ", "\[GreaterEqual]", "  ", 
       RowBox[{"dcrit", "[", "c", "]"}], ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"c", "\[GreaterEqual]", "tIUpper", " ", ">", " ", "0"}], " ", "&&",
       " ", 
      RowBox[{"t", "<", " ", "c"}]}], ",", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"d", "^", "2"}], " ", 
        RowBox[{"Refine", "[", 
         RowBox[{"ynu", "[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", 
         RowBox[{"Refine", "[", 
          RowBox[{"dcrit", "[", "c", "]"}], "]"}], ",", " ", "dIIUpper"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tIIUpper"}], "}"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.734095389522674*^9, 3.7340954055914383`*^9}, {
   3.734095499034425*^9, 3.734095548076495*^9}, {3.734171351467705*^9, 
   3.734171474638069*^9}, {3.734173239811743*^9, 3.7341733517185926`*^9}, {
   3.734173706215231*^9, 3.73417370924438*^9}, {3.7341784149643507`*^9, 
   3.734178445518594*^9}, {3.7341843882502623`*^9, 3.734184397827875*^9}, {
   3.734184429124744*^9, 3.7341844584005404`*^9}, 3.73590648342654*^9, {
   3.735906532446971*^9, 3.7359065706472387`*^9}, {3.736007151603951*^9, 
   3.7360074374412727`*^9}, {3.736007640258806*^9, 3.736007643670491*^9}, {
   3.736007676103869*^9, 3.736007706146546*^9}, {3.736007793057197*^9, 
   3.736007917929512*^9}, {3.736077903765541*^9, 3.736077930349577*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"921f7929-4df1-48d4-a676-fa48f698a03f"],

Cell[BoxData[
 RowBox[{"i", " ", "s", " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     SuperscriptBox["dIIUpper", "3"], "3"], "-", 
    RowBox[{
     FractionBox["1", "3"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"P0", " ", "s"}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]}], ")"}], " ", "tIIUpper"}]], "Output",
 CellChangeTimes->{
  3.735906571599194*^9, 3.7360071900038443`*^9, {3.736007896707638*^9, 
   3.736007918283534*^9}, {3.7360779215557404`*^9, 3.736077931566424*^9}, 
   3.736167513741502*^9, 3.736600062691593*^9, 3.736686680040289*^9, 
   3.742823963619226*^9, 3.743084103704702*^9, 3.743931515128561*^9, 
   3.74915099031175*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"2749ad05-da4c-49e5-939b-def4bbbd9faa"]
}, Open  ]],

Cell["Region III", "Text",
 CellChangeTimes->{{3.7360079362484007`*^9, 
  3.736007937705853*^9}},ExpressionUUID->"3033835c-03fe-46b8-b45e-\
7c3b949f1132"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"tIII", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"tcrit", "[", "dmax", "]"}], ",", "i"}], "]"}], ",", 
        "tmax"}], "]"}], ",", "c"}], "]"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"tIIIUpper", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"Min", "[", 
       RowBox[{"i", ",", "tmax"}], "]"}], ",", "c"}], "]"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"VresolvedClose", " ", "=", " ", 
   RowBox[{"Simplify", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Assuming", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "\[LessEqual]", " ", "t", "<", " ", "i"}], " ", "&&", 
        "  ", 
        RowBox[{"c", " ", "\[LessEqual]", "  ", "tIII", " ", "<", " ", "i"}], 
        " ", "&&", " ", 
        RowBox[{
         RowBox[{"Refine", "[", 
          RowBox[{
           RowBox[{"dcrit", "[", "t", "]"}], ",", 
           RowBox[{"c", "\[LessEqual]", "t", " ", "<", " ", "i"}]}], "]"}], 
         ">", "0"}]}], " ", ",", "\[IndentingNewLine]", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d", "^", "2"}], 
            RowBox[{"Refine", "[", 
             RowBox[{"ymaxnu", "[", 
              RowBox[{"d", ",", "t"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"d", ",", "0", ",", "dmax"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "c", ",", "tIII"}], "}"}]}], "]"}]}], "]"}], " ", 
     "+", " ", "\[IndentingNewLine]", 
     RowBox[{"Assuming", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "\[LessEqual]", " ", "t", "<", " ", "i"}], " ", "&&", 
        " ", 
        RowBox[{"tIII", ">", "0"}], " ", "&&", " ", 
        RowBox[{"tIII", "\[LessEqual]", "tIIIUpper"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Integrate", "[", " ", 
        RowBox[{
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d", "^", "2"}], 
            RowBox[{"ymaxnu", "[", 
             RowBox[{"d", ",", "t"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"d", ",", "0", ",", 
             RowBox[{"Refine", "[", 
              RowBox[{"dcrit", "[", "t", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "tIII", ",", "tIIIUpper"}], "}"}]}], "]"}]}], 
      "]"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.736066724326589*^9, 3.7360667279657593`*^9}, {
   3.7360667684523983`*^9, 3.736066854252728*^9}, {3.736066890813724*^9, 
   3.736067054824597*^9}, {3.7360670949426937`*^9, 3.736067193889763*^9}, {
   3.736067243096669*^9, 3.736067247231414*^9}, {3.736067372271153*^9, 
   3.736067388651856*^9}, {3.73606742336865*^9, 3.736067550058014*^9}, {
   3.736067586437356*^9, 3.7360676062914343`*^9}, {3.7360676994239893`*^9, 
   3.7360677044242983`*^9}, 3.7360777785552807`*^9, {3.736166183435708*^9, 
   3.736166187676014*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"7932023c-b8ea-464c-a65c-157ca8f1a350"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["dmax", "5"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "14"}], " ", "c", " ", "i", " ", "P0", " ", "s"}], "+", 
      RowBox[{
       SuperscriptBox["c", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["dmax", "2"]}], "-", 
         RowBox[{"7", " ", "P0", " ", "s"}]}], ")"}]}], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["dmax", "2"], " ", 
        SuperscriptBox["tIII", 
         RowBox[{"5", "/", "2"}]]}], 
       SqrtBox["c"]], "+", 
      RowBox[{"7", " ", "P0", " ", "s", " ", "tIII", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "i"}], "+", "tIII"}], ")"}]}]}], ")"}]}], 
   RowBox[{"70", " ", 
    SuperscriptBox["P0", "2"], " ", "s"}]], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["c", 
     RowBox[{"5", "/", "4"}]], " ", "s", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"P0", " ", "s"}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "21"}], " ", "i", " ", 
       SuperscriptBox["tIII", 
        RowBox[{"1", "/", "4"}]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"21", " ", "i"}], "-", 
         RowBox[{"2", " ", "tIII"}]}], ")"}], " ", 
       SuperscriptBox["tIIIUpper", 
        RowBox[{"1", "/", "4"}]]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["tIII", 
        RowBox[{"1", "/", "4"}]], " ", "tIIIUpper"}]}], ")"}]}], 
   RowBox[{"105", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"tIII", " ", "tIIIUpper"}], ")"}], 
     RowBox[{"1", "/", "4"}]]}]]}]], "Output",
 CellChangeTimes->{{3.736067524555024*^9, 3.736067532737089*^9}, 
   3.736067565272352*^9, 3.7360676149056807`*^9, 3.7360677126547813`*^9, 
   3.736077790179985*^9, 3.736167526406493*^9, 3.73660018905892*^9, 
   3.736686691471244*^9, 3.742823976723577*^9, 3.7430841128280354`*^9, 
   3.743931524904594*^9, 3.749150999295849*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"40363916-ab0c-4888-ad64-ae65295d3a58"]
}, Open  ]],

Cell["Region IV", "Text",
 CellChangeTimes->{{3.736067686161018*^9, 
  3.736067687405298*^9}},ExpressionUUID->"104c389c-f75b-4d9e-b43c-\
83234fc46003"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"tIV", " ", "=", " ", "tIII"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"tIVUpper", " ", "=", " ", "tIIIUpper"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"VresolvedFar", " ", "=", 
   RowBox[{"Simplify", "[", " ", "\[IndentingNewLine]", 
    RowBox[{"Assuming", "[", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"c", "\[LessEqual]", " ", "t", " ", "<", " ", "i"}], " ", "&&",
        " ", 
       RowBox[{"c", " ", "\[LessEqual]", "  ", "tIV", " ", "<", " ", "i"}], 
       " ", "&&", " ", 
       RowBox[{"c", "\[LessEqual]", " ", "tIVUpper", " ", "<", " ", "i"}], 
       " ", "&&", " ", 
       RowBox[{"0", "<", "tIV", "<", "tIVUpper"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Refine", "[", 
         RowBox[{
          RowBox[{"dcrit", "[", "t", "]"}], ",", 
          RowBox[{"c", "\[LessEqual]", "t", "<", "i"}]}], "]"}], ">", "0"}]}],
       " ", ",", "\[IndentingNewLine]", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"d", "^", "2"}], 
           RowBox[{"Refine", "[", 
            RowBox[{"ynu", "[", "t", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"d", ",", 
            RowBox[{"Refine", "[", 
             RowBox[{"dcrit", "[", "t", "]"}], "]"}], ",", "dmax"}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "tIV", ",", "tIVUpper"}], "}"}]}], "]"}]}], " ", 
     "\[IndentingNewLine]", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.736067734811084*^9, 3.736067954219445*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"5bae85b0-2428-4fc1-aa77-5cb8165e7633"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  SqrtBox["c"], " ", "i", " ", "s", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["c", 
      RowBox[{"3", "/", "4"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"P0", " ", "s"}], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["4", 
         SuperscriptBox["tIV", 
          RowBox[{"1", "/", "4"}]]]}], "+", 
       FractionBox["4", 
        SuperscriptBox["tIVUpper", 
         RowBox[{"1", "/", "4"}]]]}], ")"}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["dmax", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox["tIV"], "-", 
       SqrtBox["tIVUpper"]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7360677767001963`*^9, 3.736067889204658*^9, {3.736067936089614*^9, 
   3.7360679607752028`*^9}, 3.7361675319915733`*^9, 3.736600559538291*^9, 
   3.7366866976963873`*^9, 3.742823982253289*^9, 3.743084118609211*^9, 
   3.743931530827222*^9, 3.7491510055146713`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"2366414f-1096-40f8-b650-a14c3780df82"]
}, Open  ]],

Cell["Region V", "Text",
 CellChangeTimes->{{3.7360679878113937`*^9, 
  3.736067993047606*^9}},ExpressionUUID->"3070a645-eb04-473a-a50d-\
2a50a000b040"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"tV", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"tcrit", "[", "dmax", "]"}], ",", "tmax"}], "]"}], ",", "i"}],
      "]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"tVUpper", " ", "=", "  ", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"tcrit", "[", "dmax", "]"}], ",", "tmax"}], "]"}], ",", "i"}],
      "]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"VbroadClose", " ", "=", " ", 
   RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
    RowBox[{"Assuming", "[", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "<", "t"}], " ", "&&", " ", 
       RowBox[{"i", " ", "\[LessEqual]", "  ", "tV", " ", "<", " ", "tmax"}], 
       " ", "&&", " ", 
       RowBox[{"tV", ">", "0"}], " ", "&&", " ", 
       RowBox[{"tVUpper", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"tV", " ", ">", " ", "tVUpper"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d", "^", "2"}], 
            RowBox[{"Refine", "[", 
             RowBox[{"ymaxnu", "[", 
              RowBox[{"d", ",", "t"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"d", ",", "0", ",", "dmax"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "i", ",", "tV"}], "}"}]}], "]"}], "+", 
       "\[IndentingNewLine]", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d", "^", "2"}], 
            RowBox[{"Refine", "[", 
             RowBox[{"ymaxnu", "[", 
              RowBox[{"d", ",", "t"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"d", ",", "0", ",", 
             RowBox[{"Refine", "[", 
              RowBox[{"dcrit", "[", "t", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "tV", ",", "tVUpper"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.73606802056814*^9, 3.7360682513855343`*^9}, 
   3.736068348920807*^9, {3.736068449559111*^9, 3.736068489466642*^9}, {
   3.736166992838642*^9, 3.736167036378611*^9}, {3.736167553157744*^9, 
   3.7361676103948517`*^9}, {3.736676843227228*^9, 3.736676849468705*^9}, {
   3.736676885427925*^9, 3.736676889524235*^9}, {3.73667697163866*^9, 
   3.73667700191186*^9}, 3.736677066144515*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"a772b48f-8bdd-48c1-8fbc-2dbcb22706f8"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "210"], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"42", " ", 
      SuperscriptBox["dmax", "5"], " ", "i", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "i"}], "+", "tV"}], ")"}]}], "P0"], "+", 
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox["dmax", "7"], " ", 
         SqrtBox[
          RowBox[{"c", " ", "i"}]]}], "-", 
        RowBox[{"7", " ", "c", " ", 
         SuperscriptBox["dmax", "5"], " ", "P0", " ", "s"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["i", "2"], "-", 
        SuperscriptBox["tV", "2"]}], ")"}]}], 
     RowBox[{"c", " ", 
      SuperscriptBox["P0", "2"], " ", "s"}]], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"c", " ", "i"}], ")"}], 
      RowBox[{"5", "/", "4"}]], " ", "s", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"P0", " ", "s"}], 
        RowBox[{"tV", " ", "tVUpper"}]], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "i", " ", 
        SuperscriptBox["tV", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       RowBox[{"21", " ", 
        SuperscriptBox["tV", 
         RowBox[{"3", "/", "2"}]], " ", "tVUpper"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "i"}], "+", 
          RowBox[{"21", " ", "tV"}]}], ")"}], " ", 
        SuperscriptBox["tVUpper", 
         RowBox[{"3", "/", "2"}]]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.73606817772244*^9, 3.736068255185277*^9}, 
   3.736068353035964*^9, 3.736167441057704*^9, {3.736167539675106*^9, 
   3.736167614647396*^9}, 3.736600627847393*^9, {3.736676881323666*^9, 
   3.7366768969196987`*^9}, 3.736677074174061*^9, 3.736686701479555*^9, 
   3.742823986148182*^9, 3.743084122383135*^9, 3.743931534756544*^9, 
   3.7491510098926773`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"386f766b-ff05-4606-a335-3547f7fe25c3"]
}, Open  ]],

Cell["Region VI", "Text",
 CellChangeTimes->{
  3.7360683824835587`*^9},ExpressionUUID->"5a00ac6a-2688-4b62-a876-\
52b774989e9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"tVI", " ", "=", " ", "tV"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"tVIUpper", " ", "=", " ", "tVUpper"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"VbroadFar", " ", "=", " ", 
   RowBox[{"Simplify", "[", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Assuming", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"i", " ", "<", " ", "t"}], " ", "&&", " ", 
        RowBox[{
        "i", " ", "\[LessEqual]", "  ", "tVI", " ", "<", " ", "tmax"}], "  ", 
        "&&", " ", 
        RowBox[{"tVI", "\[LessEqual]", " ", "tVIUpper"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"d", "^", "2"}], 
            RowBox[{"Refine", "[", 
             RowBox[{"ynu", "[", "t", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"d", ",", 
             RowBox[{"Refine", "[", 
              RowBox[{"dcrit", "[", "t", "]"}], "]"}], ",", "dmax"}], "}"}]}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "tVI", ",", "tVIUpper"}], "}"}]}], "]"}]}], "]"}],
      ",", "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"i", " ", "<", " ", "tcrit", " ", "<", " ", "tmax"}], " ", "&&",
       "  ", 
      RowBox[{
       RowBox[{"Refine", "[", 
        RowBox[{"dcrit", "[", "t", "]"}], "]"}], ">", "0"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.736068418675192*^9, 3.736068442107381*^9}, {
  3.736068495112255*^9, 3.7360686586625853`*^9}, {3.736167003001684*^9, 
  3.736167017734948*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"562d19e9-1b99-4b35-b432-454dffa4897d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  SqrtBox[
   RowBox[{"c", " ", "i"}]], " ", "s", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"c", " ", "i"}], ")"}], 
      RowBox[{"3", "/", "4"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"P0", " ", "s"}], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["2", 
         SqrtBox["tVI"]]}], "+", 
       FractionBox["2", 
        SqrtBox["tVIUpper"]]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["dmax", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "tVI"}], "+", "tVIUpper"}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.73606861065667*^9, 3.736068668955319*^9}, 
   3.73616763320256*^9, 3.736600672475697*^9, 3.736686707008363*^9, 
   3.742823988098803*^9, 3.743084123836241*^9, 3.743931536177857*^9, 
   3.7491510114669347`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"b3541f93-60f9-49a1-9787-0d38e0aa3242"]
}, Open  ]],

Cell["\<\
We can also calculate the total volume for some particular cases for \
comparison with the paper and script:\
\>", "Text",
 CellChangeTimes->{{3.742824008857808*^9, 3.742824079664328*^9}, {
  3.7428241591141157`*^9, 
  3.742824166701373*^9}},ExpressionUUID->"f6a95419-7b80-432a-b788-\
8bf764656163"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
   "VunresolvedClose", " ", "+", " ", "VunresolvedFar", " ", "+", " ", 
    "VresolvedClose", "+", "VresolvedFar", "+", "VbroadClose", "+", 
    "VbroadFar"}], "]"}], " ", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"tV", "\[Rule]", "i"}], ",", " ", 
    RowBox[{"tVI", "\[Rule]", "i"}], ",", 
    RowBox[{"tVIUpper", "\[Rule]", " ", "tmax"}], ",", " ", 
    RowBox[{"tIII", "\[Rule]", " ", "c"}], ",", " ", 
    RowBox[{"tIIIUpper", "\[Rule]", " ", "i"}], ",", 
    RowBox[{"dIIUpper", "\[Rule]", " ", "dmax"}], ",", 
    RowBox[{"tIIUpper", "\[Rule]", "c"}], ",", " ", 
    RowBox[{"dIUpper", "\[Rule]", " ", 
     RowBox[{"Refine", "[", 
      RowBox[{
       RowBox[{"dcrit", "[", "t", "]"}], ",", 
       RowBox[{"t", "<", "c"}]}], "]"}]}], ",", 
    RowBox[{"tIUpper", "\[Rule]", "c"}], ",", " ", 
    RowBox[{"tIV", "\[Rule]", " ", "c"}], ",", " ", 
    RowBox[{"tIVUpper", "\[Rule]", "i"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7360687082006693`*^9, 3.736068761325563*^9}, {
  3.7360688043295803`*^9, 3.736068805598402*^9}, {3.7360688517098513`*^9, 
  3.736068853327509*^9}, {3.736068896060151*^9, 3.7360689119828243`*^9}, {
  3.736078157324902*^9, 3.736078158664838*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"796489e5-9337-4c16-a498-14e810f464ab"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "210"], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"8", " ", 
      SuperscriptBox["c", 
       RowBox[{"5", "/", "4"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "19"}], " ", 
         SuperscriptBox["c", 
          RowBox[{"1", "/", "4"}]], " ", "i"}], "+", 
        RowBox[{
         SuperscriptBox["i", 
          RowBox[{"1", "/", "4"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "c"}], "+", 
           RowBox[{"21", " ", "i"}]}], ")"}]}]}], ")"}], " ", "s", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"P0", " ", "s"}], ")"}], 
       RowBox[{"3", "/", "2"}]]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"c", " ", "i"}], ")"}], 
      RowBox[{"1", "/", "4"}]]], "-", 
    FractionBox[
     RowBox[{"3", " ", "c", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"P0", " ", "s"}], ")"}], 
       RowBox[{"5", "/", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "c", " ", "P0", " ", "s"}], "-", 
        RowBox[{"14", " ", "i", " ", "P0", " ", "s"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["P0", "2"], " ", "s"}]], "-", 
    RowBox[{"70", " ", "c", " ", "i", " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["dmax", "3"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"P0", " ", "s"}], ")"}], 
        RowBox[{"3", "/", "2"}]]}], ")"}]}], "+", 
    RowBox[{"70", " ", 
     SqrtBox["c"], " ", "i", " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["dmax", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox["c"], "-", 
          SqrtBox["i"]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["c", 
         RowBox[{"3", "/", "4"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["4", 
            SuperscriptBox["c", 
             RowBox[{"1", "/", "4"}]]]}], "+", 
          FractionBox["4", 
           SuperscriptBox["i", 
            RowBox[{"1", "/", "4"}]]]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"P0", " ", "s"}], ")"}], 
         RowBox[{"3", "/", "2"}]]}]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{"3", " ", 
      SuperscriptBox["dmax", "5"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["c", "2"], " ", 
         SuperscriptBox["dmax", "2"]}], "-", 
        RowBox[{"14", " ", "c", " ", "i", " ", "P0", " ", "s"}], "+", 
        RowBox[{"7", " ", "c", " ", 
         RowBox[{"(", 
          RowBox[{"c", "+", 
           RowBox[{"2", " ", "i"}]}], ")"}], " ", "P0", " ", "s"}], "+", 
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["dmax", "2"]}], "-", 
           RowBox[{"7", " ", "P0", " ", "s"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["P0", "2"], " ", "s"}]], "+", 
    RowBox[{"70", " ", 
     SqrtBox[
      RowBox[{"c", " ", "i"}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"c", " ", "i"}], ")"}], 
         RowBox[{"3", "/", "4"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"P0", " ", "s"}], ")"}], 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", 
            SqrtBox["i"]]}], "+", 
          FractionBox["2", 
           SqrtBox["tmax"]]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["dmax", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "i"}], "+", "tmax"}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"c", " ", "i"}], ")"}], 
      RowBox[{"5", "/", "4"}]], " ", "s", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"P0", " ", "s"}], 
        RowBox[{"i", " ", "tVUpper"}]], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["i", 
         RowBox[{"5", "/", "2"}]]}], "-", 
       RowBox[{"21", " ", 
        SuperscriptBox["i", 
         RowBox[{"3", "/", "2"}]], " ", "tVUpper"}], "+", 
       RowBox[{"23", " ", "i", " ", 
        SuperscriptBox["tVUpper", 
         RowBox[{"3", "/", "2"}]]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.736068897523438*^9, 3.736068914583001*^9}, 
   3.7360781613932333`*^9, 3.7366773016901608`*^9, 3.736686712594946*^9, 
   3.7428239936159067`*^9, 3.742824081801296*^9, 3.743931538092936*^9, 
   3.7491510134549026`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"568a26c4-acc9-4db9-a711-3eec811800f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
   "VunresolvedClose", " ", "+", " ", "VunresolvedFar", " ", "+", " ", 
    "VresolvedClose", "+", "VresolvedFar", "+", "VbroadClose", "+", 
    "VbroadFar"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"tVI", "\[Rule]", "tV"}], ",", 
    RowBox[{"tIII", "\[Rule]", "tIV"}], ",", 
    RowBox[{"tIVUpper", "\[Rule]", "tIIIUpper"}], ",", " ", 
    RowBox[{"tIIUpper", "\[Rule]", "tIUpper"}], ",", " ", 
    RowBox[{"tVIUpper", "\[Rule]", "tVUpper"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7361666913456297`*^9, 3.736166721607473*^9}, {
  3.7361667758880863`*^9, 3.736166782183715*^9}, {3.7361670656565933`*^9, 
  3.736167094143012*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"8c30fc93-7212-486b-b7f4-62126fed3df2"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "210"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "70"}], " ", "i", " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["dIIUpper", "3"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"P0", " ", "s"}], ")"}], 
        RowBox[{"3", "/", "2"}]]}], ")"}], " ", "tIUpper"}], "-", 
    FractionBox[
     RowBox[{"3", " ", 
      SuperscriptBox["dIUpper", "5"], " ", "tIUpper", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "14"}], " ", "i", " ", "P0", " ", "s"}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox["dIUpper", "2"], " ", "tIUpper"}], "-", 
        RowBox[{"7", " ", "P0", " ", "s", " ", "tIUpper"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["P0", "2"], " ", "s"}]], "+", 
    RowBox[{"70", " ", 
     SqrtBox["c"], " ", "i", " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["c", 
         RowBox[{"3", "/", "4"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"P0", " ", "s"}], ")"}], 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["4", 
           SuperscriptBox["tIIIUpper", 
            RowBox[{"1", "/", "4"}]]], "-", 
          FractionBox["4", 
           SuperscriptBox["tIV", 
            RowBox[{"1", "/", "4"}]]]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["dmax", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["tIIIUpper"]}], "+", 
          SqrtBox["tIV"]}], ")"}]}]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{"8", " ", 
      SuperscriptBox["c", 
       RowBox[{"5", "/", "4"}]], " ", "s", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"P0", " ", "s"}], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["tIIIUpper", 
          RowBox[{"1", "/", "4"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"21", " ", "i"}], "-", 
           RowBox[{"2", " ", "tIV"}]}], ")"}]}], "-", 
        RowBox[{"21", " ", "i", " ", 
         SuperscriptBox["tIV", 
          RowBox[{"1", "/", "4"}]]}], "+", 
        RowBox[{"2", " ", "tIIIUpper", " ", 
         SuperscriptBox["tIV", 
          RowBox[{"1", "/", "4"}]]}]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"tIIIUpper", " ", "tIV"}], ")"}], 
      RowBox[{"1", "/", "4"}]]], "+", 
    FractionBox[
     RowBox[{"3", " ", 
      SuperscriptBox["dmax", "5"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "14"}], " ", "c", " ", "i", " ", "P0", " ", "s"}], "+", 
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["dmax", "2"]}], "-", 
           RowBox[{"7", " ", "P0", " ", "s"}]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{"4", " ", 
          SuperscriptBox["dmax", "2"], " ", 
          SuperscriptBox["tIV", 
           RowBox[{"5", "/", "2"}]]}], 
         SqrtBox["c"]], "+", 
        RowBox[{"7", " ", "P0", " ", "s", " ", "tIV", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "i"}], "+", "tIV"}], ")"}]}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["P0", "2"], " ", "s"}]], "+", 
    FractionBox[
     RowBox[{"42", " ", 
      SuperscriptBox["dmax", "5"], " ", "i", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "i"}], "+", "tV"}], ")"}]}], "P0"], "+", 
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox["dmax", "7"], " ", 
         SqrtBox[
          RowBox[{"c", " ", "i"}]]}], "-", 
        RowBox[{"7", " ", "c", " ", 
         SuperscriptBox["dmax", "5"], " ", "P0", " ", "s"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["i", "2"], "-", 
        SuperscriptBox["tV", "2"]}], ")"}]}], 
     RowBox[{"c", " ", 
      SuperscriptBox["P0", "2"], " ", "s"}]], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"c", " ", "i"}], ")"}], 
      RowBox[{"5", "/", "4"}]], " ", "s", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"P0", " ", "s"}], 
        RowBox[{"tV", " ", "tVUpper"}]], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "i", " ", 
        SuperscriptBox["tV", 
         RowBox[{"3", "/", "2"}]]}], "-", 
       RowBox[{"21", " ", 
        SuperscriptBox["tV", 
         RowBox[{"3", "/", "2"}]], " ", "tVUpper"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "i"}], "+", 
          RowBox[{"21", " ", "tV"}]}], ")"}], " ", 
        SuperscriptBox["tVUpper", 
         RowBox[{"3", "/", "2"}]]}]}], ")"}]}], "+", 
    RowBox[{"70", " ", 
     SqrtBox[
      RowBox[{"c", " ", "i"}]], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"c", " ", "i"}], ")"}], 
         RowBox[{"3", "/", "4"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"P0", " ", "s"}], ")"}], 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", 
            SqrtBox["tV"]]}], "+", 
          FractionBox["2", 
           SqrtBox["tVUpper"]]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["dmax", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "tV"}], "+", "tVUpper"}], ")"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.7361666682355633`*^9, 3.736166723166684*^9, 
  3.7361668041949253`*^9, 3.736167233809751*^9, 3.7366773033954687`*^9, 
  3.736686713636401*^9, 3.742824088397361*^9, 3.743931572724712*^9, 
  3.7491510135456705`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"05f6b427-fa0f-4ad6-beb5-01e9cc5a0668"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"N", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"VunresolvedClose", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dIUpper", "\[Rule]", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"P0", "*", "s"}], "]"}]}], ",", 
        RowBox[{"tIUpper", "\[Rule]", " ", "c"}]}], "}"}]}], ")"}], " ", "/.",
     " ", "checkvalues"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"VunresolvedFar", " ", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dIIUpper", " ", "\[Rule]", " ", "dmax"}], ",", " ", 
        RowBox[{"tIIUpper", " ", "\[Rule]", "c"}]}], "}"}]}], ")"}], "/.", 
    "checkvalues"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"VresolvedClose", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"tIII", "\[Rule]", "c"}], ",", 
        RowBox[{"tIIIUpper", "\[Rule]", "tmax"}]}], " ", "}"}]}], ")"}], "/.",
     "checkvalues"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"VresolvedFar", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"tIV", "\[Rule]", "c"}], ",", 
        RowBox[{"tIVUpper", "\[Rule]", "tmax"}]}], "}"}]}], ")"}], "/.", 
    "checkvalues"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"VbroadClose", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"tV", "\[Rule]", "i"}], ",", 
        RowBox[{"tVUpper", "\[Rule]", "i"}]}], "}"}]}], ")"}], "/.", 
    "checkvalues"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"VbroadFar", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"tVI", "\[Rule]", "i"}], ",", 
        RowBox[{"tVIUpper", "\[Rule]", "i"}]}], "}"}]}], ")"}], "/.", 
    "checkvalues"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.736761559474266*^9, 3.736761632331346*^9}, {
   3.736761663604602*^9, 3.736761679698398*^9}, {3.742824503495473*^9, 
   3.742824527090165*^9}, 3.7430826383304*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"5257284a-2abf-432a-8fd9-5196c3188f86"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2.1485092962623105`*^87", " ", 
   SuperscriptBox["Hz", "2"], " ", 
   SuperscriptBox["m", "5"]}], "W"]], "Output",
 CellChangeTimes->{
  3.736761638749618*^9, 3.7367616802594423`*^9, 3.742824154833374*^9, {
   3.7428244772611713`*^9, 3.742824528075919*^9}, {3.7430840986230917`*^9, 
   3.7430841240463953`*^9}, 3.743084666095573*^9, 3.743931576162231*^9, {
   3.749151013579397*^9, 3.749151013651374*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"8dd3e97c-6feb-4b70-94d0-e70c0ee904f2"],

Cell[BoxData[
 FractionBox[
  RowBox[{"4.6019995615496984`*^94", " ", 
   SuperscriptBox["Hz", "2"], " ", 
   SuperscriptBox["m", "5"]}], "W"]], "Output",
 CellChangeTimes->{
  3.736761638749618*^9, 3.7367616802594423`*^9, 3.742824154833374*^9, {
   3.7428244772611713`*^9, 3.742824528075919*^9}, {3.7430840986230917`*^9, 
   3.7430841240463953`*^9}, 3.743084666095573*^9, 3.743931576162231*^9, {
   3.749151013579397*^9, 3.749151013656829*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"f4fef136-6217-4286-ba91-45810b26f726"],

Cell[BoxData[
 FractionBox[
  RowBox[{"8.429696375797363`*^87", " ", 
   SuperscriptBox["Hz", "2"], " ", 
   SuperscriptBox["m", "5"]}], "W"]], "Output",
 CellChangeTimes->{
  3.736761638749618*^9, 3.7367616802594423`*^9, 3.742824154833374*^9, {
   3.7428244772611713`*^9, 3.742824528075919*^9}, {3.7430840986230917`*^9, 
   3.7430841240463953`*^9}, 3.743084666095573*^9, 3.743931576162231*^9, {
   3.749151013579397*^9, 3.749151013661125*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"2b471bd4-947d-41cb-a67f-9c03085dba05"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2.504091066416455`*^98", " ", 
   SuperscriptBox["Hz", "2"], " ", 
   SuperscriptBox["m", "5"]}], "W"]], "Output",
 CellChangeTimes->{
  3.736761638749618*^9, 3.7367616802594423`*^9, 3.742824154833374*^9, {
   3.7428244772611713`*^9, 3.742824528075919*^9}, {3.7430840986230917`*^9, 
   3.7430841240463953`*^9}, 3.743084666095573*^9, 3.743931576162231*^9, {
   3.749151013579397*^9, 3.74915101366506*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"fb23095a-3045-45e3-a274-408357d6d926"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.736761638749618*^9, 3.7367616802594423`*^9, 3.742824154833374*^9, {
   3.7428244772611713`*^9, 3.742824528075919*^9}, {3.7430840986230917`*^9, 
   3.7430841240463953`*^9}, 3.743084666095573*^9, 3.743931576162231*^9, {
   3.749151013579397*^9, 3.749151013668575*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"6ed589df-74c2-48ae-b8b7-cb18976821cb"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.736761638749618*^9, 3.7367616802594423`*^9, 3.742824154833374*^9, {
   3.7428244772611713`*^9, 3.742824528075919*^9}, {3.7430840986230917`*^9, 
   3.7430841240463953`*^9}, 3.743084666095573*^9, 3.743931576162231*^9, {
   3.749151013579397*^9, 3.7491510136710567`*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"1a648f40-50c6-4b6f-b51b-8462fe0ee454"]
}, Open  ]]
},
WindowSize->{766, 772},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 913, 18, 254, "Text",ExpressionUUID->"0d404c38-9fe8-41ef-a44d-ed67ffd6b3ad"],
Cell[CellGroupData[{
Cell[1496, 42, 843, 17, 48, "Input",ExpressionUUID->"57f06996-889a-450b-9a9d-058d485a5184"],
Cell[2342, 61, 467, 10, 32, "Output",ExpressionUUID->"85702ac8-92b8-4dec-8344-e77de0209940"],
Cell[2812, 73, 402, 8, 32, "Output",ExpressionUUID->"2d1258f5-b1f6-4076-be90-37dad39d43ae"]
}, Open  ]],
Cell[3229, 84, 244, 6, 34, "Text",ExpressionUUID->"b3d29880-43f9-4dfe-aea1-5d2448b351ac"],
Cell[CellGroupData[{
Cell[3498, 94, 418, 7, 28, "Input",ExpressionUUID->"0d3a43ed-2b89-416e-b519-cf422c199cb1"],
Cell[3919, 103, 766, 17, 32, "Output",ExpressionUUID->"d8096a69-09e3-4cd2-af74-195cb45cb482"]
}, Open  ]],
Cell[4700, 123, 203, 3, 34, "Text",ExpressionUUID->"f0ac5fa2-954c-4fa8-a129-496c617a5d69"],
Cell[CellGroupData[{
Cell[4928, 130, 620, 14, 28, "Input",ExpressionUUID->"31f3d801-aa5c-41f1-9cc4-902636eb0d46"],
Cell[5551, 146, 669, 14, 56, "Output",ExpressionUUID->"7fba33b4-3a92-4721-8a30-395f904d257b"]
}, Open  ]],
Cell[6235, 163, 749, 13, 144, "Text",ExpressionUUID->"f589b473-84e0-4fde-914d-a2ea3ea9d581"],
Cell[6987, 178, 1224, 33, 67, "Input",ExpressionUUID->"6f63959c-f087-4971-ba0d-a13298288410"],
Cell[CellGroupData[{
Cell[8236, 215, 369, 6, 28, "Input",ExpressionUUID->"ecccd36d-902b-4d4b-bb9d-c19d399df3f7"],
Cell[8608, 223, 2654, 70, 107, "Output",ExpressionUUID->"203faf98-5aa8-42e4-92ea-91115d5d640f"]
}, Open  ]],
Cell[11277, 296, 572, 10, 78, "Text",ExpressionUUID->"c85729cd-a156-4aef-9f99-f3b638d222ba"],
Cell[CellGroupData[{
Cell[11874, 310, 1985, 41, 67, "Input",ExpressionUUID->"4a9b6095-b30d-4419-aab4-95ae6a758c49"],
Cell[13862, 353, 598, 10, 32, "Output",ExpressionUUID->"c3f5ece1-b83a-41ea-b8cf-cbb8a752123d"]
}, Open  ]],
Cell[14475, 366, 1130, 23, 298, "Text",ExpressionUUID->"9f08c150-1dc7-4f1c-aee2-a0e0dc7b1dd5"],
Cell[15608, 391, 415, 8, 56, "Text",ExpressionUUID->"8b9e9cac-79c1-4de1-8fb7-dceb0c3b426d"],
Cell[CellGroupData[{
Cell[16048, 403, 995, 27, 28, "Input",ExpressionUUID->"17be91b9-a183-4bfe-bf26-8f9b4d1d574b"],
Cell[17046, 432, 2165, 60, 133, "Output",ExpressionUUID->"32a44ef6-e1cc-4812-97b7-c3d104fe55e3"]
}, Open  ]],
Cell[19226, 495, 335, 7, 56, "Text",ExpressionUUID->"770a395d-9e05-4a02-8a42-745ac7175eb7"],
Cell[CellGroupData[{
Cell[19586, 506, 2403, 51, 105, "Input",ExpressionUUID->"b868adf5-1d9b-4721-9ac2-4f5bedcc0de4"],
Cell[21992, 559, 2325, 63, 119, "Output",ExpressionUUID->"2f2a5933-d1bb-46b3-a4b7-6da9b393d023"]
}, Open  ]],
Cell[24332, 625, 385, 8, 56, "Text",ExpressionUUID->"5d3009e8-eae6-4617-947c-c2d038f7b24f"],
Cell[24720, 635, 433, 10, 28, "Input",ExpressionUUID->"8cb37c4b-9939-4378-ba82-f67870130e9a"],
Cell[25156, 647, 678, 12, 78, "Text",ExpressionUUID->"9a5c1101-1e8c-46c5-87db-9288a4a1ab13"],
Cell[CellGroupData[{
Cell[25859, 663, 2875, 68, 105, "Input",ExpressionUUID->"5a764ce4-71da-4dc3-add5-01f0be053f7d"],
Cell[28737, 733, 3151, 87, 221, "Output",ExpressionUUID->"26928e5a-0cd2-49b2-ab75-fc9983a064e6"]
}, Open  ]],
Cell[31903, 823, 298, 6, 56, "Text",ExpressionUUID->"db77d6a4-d0f2-48d0-9582-c0f0ce67760b"],
Cell[CellGroupData[{
Cell[32226, 833, 624, 11, 28, "Input",ExpressionUUID->"ec6659e2-cd3b-4616-85dc-2b58b3066dbf"],
Cell[32853, 846, 2595, 66, 142, "Output",ExpressionUUID->"c7584de9-0af2-4b5c-9204-ae7158c8db8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35485, 917, 705, 20, 28, "Input",ExpressionUUID->"297bea79-c0b5-43af-8249-4891137921e2"],
Cell[36193, 939, 12508, 323, 369, "Output",ExpressionUUID->"f8cd7495-9f3e-48a0-811f-1ea2f11d17a6"]
}, Open  ]],
Cell[48716, 1265, 242, 6, 34, "Text",ExpressionUUID->"7cec2326-38ab-4921-9b23-cae1a57bd4af"],
Cell[CellGroupData[{
Cell[48983, 1275, 697, 15, 28, "Input",ExpressionUUID->"0f9fc723-8220-4189-b713-d8b139fb89c7"],
Cell[49683, 1292, 151138, 2476, 303, 92472, 1515, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"6df0debf-c4bf-48bf-a787-af83bbf96f54"]
}, Open  ]],
Cell[200836, 3771, 186, 3, 34, "Text",ExpressionUUID->"2246f6b9-028d-4bed-8f21-e1b0ad35e6d6"],
Cell[CellGroupData[{
Cell[201047, 3778, 1600, 39, 48, "Input",ExpressionUUID->"3da7558c-454a-4872-9620-3f2750aacee4"],
Cell[202650, 3819, 966, 23, 105, "Output",ExpressionUUID->"623a7175-62bc-4b1f-a4cf-678b862f52dd"]
}, Open  ]],
Cell[203631, 3845, 1231, 24, 276, "Text",ExpressionUUID->"719b1f9b-ce69-48bd-96fc-bf84a88e0c91"],
Cell[204865, 3871, 608, 11, 144, "Text",ExpressionUUID->"0ade3a1b-089b-41f9-9bd9-b2cf437be4d4"],
Cell[205476, 3884, 152, 3, 34, "Text",ExpressionUUID->"6869ea14-d759-44b2-a8bd-ce6ee1b61b98"],
Cell[CellGroupData[{
Cell[205653, 3891, 2018, 43, 105, "Input",ExpressionUUID->"bdcc455e-335a-48eb-8366-2c3b8afa5fc1"],
Cell[207674, 3936, 967, 21, 61, "Output",ExpressionUUID->"c5294b79-695c-4f2c-81ca-96bfa45b6a95"]
}, Open  ]],
Cell[208656, 3960, 155, 3, 34, "Text",ExpressionUUID->"03245938-3d91-413f-9606-6582b3cb94c5"],
Cell[CellGroupData[{
Cell[208836, 3967, 2035, 44, 105, "Input",ExpressionUUID->"921f7929-4df1-48d4-a676-fa48f698a03f"],
Cell[210874, 4013, 751, 18, 62, "Output",ExpressionUUID->"2749ad05-da4c-49e5-939b-def4bbbd9faa"]
}, Open  ]],
Cell[211640, 4034, 154, 3, 34, "Text",ExpressionUUID->"3033835c-03fe-46b8-b45e-7c3b949f1132"],
Cell[CellGroupData[{
Cell[211819, 4041, 3277, 81, 162, "Input",ExpressionUUID->"7932023c-b8ea-464c-a65c-157ca8f1a350"],
Cell[215099, 4124, 2171, 62, 133, "Output",ExpressionUUID->"40363916-ab0c-4888-ad64-ae65295d3a58"]
}, Open  ]],
Cell[217285, 4189, 151, 3, 34, "Text",ExpressionUUID->"104c389c-f75b-4d9e-b43c-83234fc46003"],
Cell[CellGroupData[{
Cell[217461, 4196, 1762, 42, 162, "Input",ExpressionUUID->"5bae85b0-2428-4fc1-aa77-5cb8165e7633"],
Cell[219226, 4240, 1148, 33, 59, "Output",ExpressionUUID->"2366414f-1096-40f8-b650-a14c3780df82"]
}, Open  ]],
Cell[220389, 4276, 152, 3, 34, "Text",ExpressionUUID->"3070a645-eb04-473a-a50d-2a50a000b040"],
Cell[CellGroupData[{
Cell[220566, 4283, 2720, 66, 162, "Input",ExpressionUUID->"a772b48f-8bdd-48c1-8fbc-2dbcb22706f8"],
Cell[223289, 4351, 2128, 60, 157, "Output",ExpressionUUID->"386f766b-ff05-4606-a335-3547f7fe25c3"]
}, Open  ]],
Cell[225432, 4414, 129, 3, 34, "Text",ExpressionUUID->"5a00ac6a-2688-4b62-a876-52b774989e9b"],
Cell[CellGroupData[{
Cell[225586, 4421, 1795, 45, 162, "Input",ExpressionUUID->"562d19e9-1b99-4b35-b432-454dffa4897d"],
Cell[227384, 4468, 1054, 32, 67, "Output",ExpressionUUID->"b3541f93-60f9-49a1-9787-0d38e0aa3242"]
}, Open  ]],
Cell[228453, 4503, 309, 7, 34, "Text",ExpressionUUID->"f6a95419-7b80-432a-b788-8bf764656163"],
Cell[CellGroupData[{
Cell[228787, 4514, 1332, 28, 86, "Input",ExpressionUUID->"796489e5-9337-4c16-a498-14e810f464ab"],
Cell[230122, 4544, 5070, 156, 274, "Output",ExpressionUUID->"568a26c4-acc9-4db9-a711-3eec811800f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235229, 4705, 793, 17, 67, "Input",ExpressionUUID->"8c30fc93-7212-486b-b7f4-62126fed3df2"],
Cell[236025, 4724, 6142, 186, 521, "Output",ExpressionUUID->"05f6b427-fa0f-4ad6-beb5-01e9cc5a0668"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242204, 4915, 2364, 66, 124, "Input",ExpressionUUID->"5257284a-2abf-432a-8fd9-5196c3188f86"],
Cell[244571, 4983, 524, 10, 58, "Output",ExpressionUUID->"8dd3e97c-6feb-4b70-94d0-e70c0ee904f2"],
Cell[245098, 4995, 524, 10, 58, "Output",ExpressionUUID->"f4fef136-6217-4286-ba91-45810b26f726"],
Cell[245625, 5007, 523, 10, 58, "Output",ExpressionUUID->"2b471bd4-947d-41cb-a67f-9c03085dba05"],
Cell[246151, 5019, 522, 10, 58, "Output",ExpressionUUID->"fb23095a-3045-45e3-a274-408357d6d926"],
Cell[246676, 5031, 400, 6, 32, "Output",ExpressionUUID->"6ed589df-74c2-48ae-b8b7-cb18976821cb"],
Cell[247079, 5039, 402, 6, 32, "Output",ExpressionUUID->"1a648f40-50c6-4b6f-b51b-8462fe0ee454"]
}, Open  ]]
}
]
*)

